import{_ as t,X as d,Y as r,a4 as e}from"./framework-d8252107.js";const l={},o=e("<p>便于编程时更规范的命名，变量名、类名、函数名，需要收集和学习编程常用术语。</p><table><thead><tr><th>Glossary</th><th>术语表</th><th>规范编程命名</th></tr></thead><tbody><tr><td>名称</td><td>描述</td><td>应用场景</td></tr><tr><td></td><td></td><td></td></tr><tr><td>包装</td><td></td><td></td></tr><tr><td>Wrapper</td><td>n. 包装纸，包装器，封装器。</td><td>单体装饰</td></tr><tr><td>Container</td><td>n. 容器，包装容器，集装箱，货柜。多元素组合</td><td>多元素组合</td></tr><tr><td>Box</td><td>n. 箱子，盒子。</td><td></td></tr><tr><td>Plane</td><td>n. 平面。</td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td>header</td><td>n. 头部、页眉</td><td>通常横跨于整个页面顶部有大标题或标志</td></tr><tr><td>nav</td><td>n. 导航栏</td><td>通常用菜单按钮、链接或标签页表示</td></tr><tr><td>main</td><td>n. 主内容</td><td>中心的大部分区域是当前网页大多数的独有内容</td></tr><tr><td>menu</td><td>n. 菜单</td><td></td></tr><tr><td>article</td><td>n. 文档</td><td>表示文档、页面、应用或网站中的独立结构</td></tr><tr><td>section</td><td>n. 章节</td><td>表示 HTML 文档中一个通用独立章节</td></tr><tr><td>address</td><td>n. 地址</td><td>表示 某个人或某个组织（等等）的联系信息</td></tr><tr><td>content</td><td>n. 内容</td><td></td></tr><tr><td>aside</td><td>n. 侧边栏</td><td>一些外围信息、链接、引用、广告等</td></tr><tr><td>footer</td><td>n. 底部、页脚</td><td>横跨页面底部和标题一样，页脚是放置公共信息</td></tr><tr><td></td><td></td><td></td></tr><tr><td>布局</td><td></td><td></td></tr><tr><td>Flow</td><td>流布局。默认布局 ( Normal Flow ) 按代码顺序从上到下显示</td><td>浏览器默认的 HTML 布局方式</td></tr><tr><td></td><td>display: black, inline, inline-block</td><td></td></tr><tr><td></td><td>position: static</td><td></td></tr><tr><td>Flex</td><td>弹性盒子布局 ( Flexible Box Layout Module )</td><td>专门设计出来用于创建横向或是纵向的一维页面布局</td></tr><tr><td></td><td>父级：display: flex, flex-direction: row, align-items: stretch</td><td>默认子元素被拉伸与父级同高。</td></tr><tr><td></td><td>子级: flex: 1, flex-grow, flex-shrink, flex-basis</td><td>增长系数，收缩系数，初始系数</td></tr><tr><td></td><td>父级: align-items: stretch</td><td></td></tr><tr><td></td><td>子级: align-self: flex-end</td><td></td></tr><tr><td>Grid</td><td>网格布局。column 列。row 行。gutter 沟槽 (间隙)。</td><td>二维布局系统。行列排版。</td></tr><tr><td></td><td>父级: display: grid;</td><td></td></tr><tr><td></td><td>grid-template-columns: auto auto auto;</td><td>三列平分布局</td></tr><tr><td></td><td>grid-template-columns: 1fr 1fr 1fr ;</td><td>fr 单位代表网格容器中可用空间的一份</td></tr><tr><td></td><td>grid-gap: 10px;</td><td>网格间隙 10px</td></tr><tr><td></td><td>隐式网格: grid-auto-rows: 100px;</td><td>所有隐式网格行高100px</td></tr><tr><td></td><td>grid-auto-rows : minmax(100px, auto)</td><td>minmax 至少100px</td></tr><tr><td></td><td>grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));</td><td>auto-fill 自动多列填充</td></tr><tr><td>Float</td><td>浮动布局。</td><td>文本内图像浮动。</td></tr><tr><td></td><td>float: left;</td><td>元素浮动文本左边</td></tr><tr><td></td><td>clear: left;</td><td>文本段落停止左浮动</td></tr><tr><td></td><td><code>.wrapper::after{ content: &quot;&quot;; clear: both; display:block; }</code></td><td>后方插入生成内容，附清除浮动。( clearfix CSS )</td></tr><tr><td></td><td><code>.wrapper { overflow: auto; }</code></td><td>盒子停止浮动。( 影响：滚动条或裁剪阴影 )</td></tr><tr><td></td><td>现代方案: display: flow-root;</td><td>创建块格式化上下文（BFC），盒子就会停止浮动。</td></tr><tr><td>Position</td><td>定位。静态：static，默认值。</td><td>正常文档布局流。</td></tr><tr><td></td><td>相对：relative。top, bottom, left, right 移动方位。</td><td>正常文档布局流。单位：px, mm, rems, %</td></tr><tr><td></td><td>绝对：absolute。top, bottom, left, right 移动方位。</td><td>不在正常文档布局流中。独立层。例如：弹窗，菜单，翻转面板，拖动元素。</td></tr><tr><td></td><td>z-index : 1; 堆叠顺序，z 轴</td><td></td></tr><tr><td></td><td>固定：fixed。top, bottom, left, right 移动方位。</td><td>绝对定位将元素固定在相对于其位置最近的祖先</td></tr><tr><td></td><td>粘性：sticky。top, bottom, left, right 移动方位。</td><td>相对固定位置。滚动到阈值后位置固定起来。</td></tr><tr><td>Multi-column</td><td>多列布局。三列布局：column-count: 3;</td><td></td></tr><tr><td></td><td>列宽布局：column-width: 200px;</td><td></td></tr><tr><td></td><td>列间间隙：column-gap: 20px;</td><td></td></tr><tr><td></td><td>列间样式：column-rule: 4px dotted blue;</td><td></td></tr><tr><td>Table</td><td>表格布局：</td><td></td></tr><tr><td></td><td>父级：display: table;</td><td></td></tr><tr><td></td><td>子级：display: table-caption; caption-side: bottom;</td><td>表格标题位于表格布局底部 ( 头部、左右 )</td></tr><tr><td></td><td>子级：display: table-cell;</td><td></td></tr><tr><td>RWD</td><td>响应式布局。Responsive Web Design。</td><td>大小屏幕自适应布局。</td></tr><tr><td></td><td>媒体查询。Media queries。@media all, print, screen, speech, orientation</td><td>根据设备特征数值调整 CSS</td></tr><tr><td></td><td>@media screen and ( min-width: 800px )</td><td>媒体查询调配样式</td></tr><tr><td></td><td>@import url;</td><td>导入样式</td></tr><tr><td></td><td>灵活网络。动态运算出样式值。calc ( )</td><td></td></tr><tr><td></td><td>视口单位：vw, vh</td><td></td></tr><tr><td></td><td><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot;&gt;</code></td><td>视口宽度设定为设备的宽度</td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td>专用</td><td></td><td></td></tr><tr><td>div</td><td>n. 分区</td><td></td></tr><tr><td>section</td><td>n. 段，部分，章节</td><td></td></tr><tr><td>article</td><td>文章</td><td></td></tr><tr><td>element</td><td>元素</td><td></td></tr><tr><td>block-level</td><td>区块级。例如：<code>&lt;div&gt; &lt;h1&gt; &lt;p&gt; &lt;ul&gt; &lt;table&gt; </code></td><td></td></tr><tr><td>inline-level</td><td>内联级。例如：<code>&lt;span&gt; &lt;b&gt; &lt;td&gt; &lt;a&gt; &lt;img&gt; </code></td><td></td></tr></tbody></table>",2),i=[o];function a(n,c){return d(),r("div",null,i)}const p=t(l,[["render",a],["__file","html-css.html.vue"]]);export{p as default};
