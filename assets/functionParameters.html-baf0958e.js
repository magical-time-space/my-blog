import{_ as n,X as a,Y as s,a4 as t}from"./framework-d8252107.js";const e={},o=t(`<h1 id="函数参数" tabindex="-1"><a class="header-anchor" href="#函数参数" aria-hidden="true">#</a> 函数参数</h1><p>如果你有一个含有很多参数或者相同类型参数的函数，那么你可能需要考虑将函数改为接收对象的形式：</p><p>如下一个函数：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>flagA<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> flagB<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 函数主体</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>像这样的函数，你可能会很容易错误的调用它，如 <code>foo(flagB, flagA)</code>，并且你并不会从编译器得到想要的帮助。</p><p>你可以将函数变为接收对象的形式：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>config<span class="token operator">:</span> <span class="token punctuation">{</span> flagA<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span> flagB<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> flagA<span class="token punctuation">,</span> flagB <span class="token punctuation">}</span> <span class="token operator">=</span> config<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在，函数将会被 <code>foo({ flagA, flagB })</code> 的形式调用，这样有利于发现错误及代码审查。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果你的函数足够简单，并且你不希望增加代码，忽略这个建议。</p></div>`,9),p=[o];function c(i,l){return a(),s("div",null,p)}const r=n(e,[["render",c],["__file","functionParameters.html.vue"]]);export{r as default};
