import{_ as a,X as n,Y as s,Z as t,$ as e,a0 as r,a4 as c,E as i}from"./framework-d8252107.js";const p={},l=t("h1",{id:"支持-jsx",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#支持-jsx","aria-hidden":"true"},"#"),e(" 支持 JSX")],-1),d={href:"https://facebook.github.io/jsx/",target:"_blank",rel:"noopener noreferrer"},_=c("<blockquote><p>JSX is an XML-like syntax extension to ECMAScript without any defined semantics. It&#39;s NOT intended to be implemented by engines or browsers. It&#39;s NOT a proposal to incorporate JSX into the ECMAScript spec itself. It&#39;s intended to be used by various preprocessors (transpilers) to transform these tokens into standard ECMAScript.</p></blockquote><p>JSX 背后的动机是允许用户在 JavaScript 中书写类似于 HTML 的视图，因此你可以：</p><ul><li>使用相同代码，既能检查你的 JavaScript，同时能检查你的 HTML 视图层部分。</li><li>让视图层了解运行时的上下文（加强传统 MVC 中的控制器与视图连接）。</li><li>复用 JavaScript 设计模式维护 HTML 部分，例如：用 <code>Array.prototype.map.</code>、<code>?:</code>、<code>switch</code> 等，代替创建新的可替代品。</li></ul>",3),h={href:"http://facebook.github.io/react/",target:"_blank",rel:"noopener noreferrer"};function u(f,S){const o=i("ExternalLinkIcon");return n(),s("div",null,[l,t("p",null,[e("TypeScript 支持 JSX 转换和代码分析，如果你还不了解 JSX，"),t("a",d,[e("官网"),r(o)]),e("上有关于它的摘要：")]),_,t("p",null,[e("这能够减少错误的可能性，并且能增加用户界面的可维护性。目前 JSX 的主要消费者来自 "),t("a",h,[e("facebook 推出的 ReactJS"),r(o)]),e("，接下来我们结合它来讨论 JSX 用法。")])])}const k=a(p,[["render",u],["__file","support.html.vue"]]);export{k as default};
