const n=JSON.parse(`{"key":"v-b021299e","path":"/views/Books/Front-end/JustVue2/vue-router/router.html","title":"VueRouter 对象","lang":"zh-CN","frontmatter":{"description":"VueRouter 对象 VueRouter 的实现是一个类，我们先对它做一个简单地分析，它的定义在 src/index.js 中： export default class VueRouter { static install: () =&gt; void; static version: string; app: any; apps: Array&lt;any&gt;; ready: boolean; readyCbs: Array&lt;Function&gt;; options: RouterOptions; mode: string; history: HashHistory | HTML5History | AbstractHistory; matcher: Matcher; fallback: boolean; beforeHooks: Array&lt;?NavigationGuard&gt;; resolveHooks: Array&lt;?NavigationGuard&gt;; afterHooks: Array&lt;?AfterNavigationHook&gt;; constructor (options: RouterOptions = {}) { this.app = null this.apps = [] this.options = options this.beforeHooks = [] this.resolveHooks = [] this.afterHooks = [] this.matcher = createMatcher(options.routes || [], this) let mode = options.mode || 'hash' this.fallback = mode === 'history' &amp;&amp; !supportsPushState &amp;&amp; options.fallback !== false if (this.fallback) { mode = 'hash' } if (!inBrowser) { mode = 'abstract' } this.mode = mode switch (mode) { case 'history': this.history = new HTML5History(this, options.base) break case 'hash': this.history = new HashHistory(this, options.base, this.fallback) break case 'abstract': this.history = new AbstractHistory(this, options.base) break default: if (p​rocess.env.NODE_ENV !== 'production') { assert(false, \`invalid mode: \${mode}\`) } } } match ( raw: RawLocation, current?: Route, redirectedFrom?: Location ): Route { return this.matcher.match(raw, current, redirectedFrom) } get currentRoute (): ?Route { return this.history &amp;&amp; this.history.current } init (app: any) { p​rocess.env.NODE_ENV !== 'production' &amp;&amp; assert( install.installed, \`not installed. Make sure to call \\\\\`Vue.use(VueRouter)\\\\\` \` + \`before creating root instance.\` ) this.apps.push(app) if (this.app) { return } this.app = app const history = this.history if (history instanceof HTML5History) { history.transitionTo(history.getCurrentLocation()) } else if (history instanceof HashHistory) { const setupHashListener = () =&gt; { history.setupListeners() } history.transitionTo( history.getCurrentLocation(), setupHashListener, setupHashListener ) } history.listen(route =&gt; { this.apps.forEach((app) =&gt; { app._route = route }) }) } beforeEach (fn: Function): Function { return registerHook(this.beforeHooks, fn) } beforeResolve (fn: Function): Function { return registerHook(this.resolveHooks, fn) } afterEach (fn: Function): Function { return registerHook(this.afterHooks, fn) } onReady (cb: Function, errorCb?: Function) { this.history.onReady(cb, errorCb) } onError (errorCb: Function) { this.history.onError(errorCb) } push (location: RawLocation, onComplete?: Function, onAbort?: Function) { this.history.push(location, onComplete, onAbort) } replace (location: RawLocation, onComplete?: Function, onAbort?: Function) { this.history.replace(location, onComplete, onAbort) } go (n: number) { this.history.go(n) } back () { this.go(-1) } forward () { this.go(1) } getMatchedComponents (to?: RawLocation | Route): Array&lt;any&gt; { const route: any = to ? to.matched ? to : this.resolve(to).route : this.currentRoute if (!route) { return [] } return [].concat.apply([], route.matched.map(m =&gt; { return Object.keys(m.components).map(key =&gt; { return m.components[key] }) })) } resolve ( to: RawLocation, current?: Route, append?: boolean ): { location: Location, route: Route, href: string, normalizedTo: Location, resolved: Route } { const location = normalizeLocation( to, current || this.history.current, append, this ) const route = this.match(location, current) const fullPath = route.redirectedFrom || route.fullPath const base = this.history.base const href = createHref(base, fullPath, this.mode) return { location, route, href, normalizedTo: location, resolved: route } } addRoutes (routes: Array&lt;RouteConfig&gt;) { this.matcher.addRoutes(routes) if (this.history.current !== START) { this.history.transitionTo(this.history.getCurrentLocation()) } } }","head":[["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/Books/Front-end/JustVue2/vue-router/router.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:title","content":"VueRouter 对象"}],["meta",{"property":"og:description","content":"VueRouter 对象 VueRouter 的实现是一个类，我们先对它做一个简单地分析，它的定义在 src/index.js 中： export default class VueRouter { static install: () =&gt; void; static version: string; app: any; apps: Array&lt;any&gt;; ready: boolean; readyCbs: Array&lt;Function&gt;; options: RouterOptions; mode: string; history: HashHistory | HTML5History | AbstractHistory; matcher: Matcher; fallback: boolean; beforeHooks: Array&lt;?NavigationGuard&gt;; resolveHooks: Array&lt;?NavigationGuard&gt;; afterHooks: Array&lt;?AfterNavigationHook&gt;; constructor (options: RouterOptions = {}) { this.app = null this.apps = [] this.options = options this.beforeHooks = [] this.resolveHooks = [] this.afterHooks = [] this.matcher = createMatcher(options.routes || [], this) let mode = options.mode || 'hash' this.fallback = mode === 'history' &amp;&amp; !supportsPushState &amp;&amp; options.fallback !== false if (this.fallback) { mode = 'hash' } if (!inBrowser) { mode = 'abstract' } this.mode = mode switch (mode) { case 'history': this.history = new HTML5History(this, options.base) break case 'hash': this.history = new HashHistory(this, options.base, this.fallback) break case 'abstract': this.history = new AbstractHistory(this, options.base) break default: if (p​rocess.env.NODE_ENV !== 'production') { assert(false, \`invalid mode: \${mode}\`) } } } match ( raw: RawLocation, current?: Route, redirectedFrom?: Location ): Route { return this.matcher.match(raw, current, redirectedFrom) } get currentRoute (): ?Route { return this.history &amp;&amp; this.history.current } init (app: any) { p​rocess.env.NODE_ENV !== 'production' &amp;&amp; assert( install.installed, \`not installed. Make sure to call \\\\\`Vue.use(VueRouter)\\\\\` \` + \`before creating root instance.\` ) this.apps.push(app) if (this.app) { return } this.app = app const history = this.history if (history instanceof HTML5History) { history.transitionTo(history.getCurrentLocation()) } else if (history instanceof HashHistory) { const setupHashListener = () =&gt; { history.setupListeners() } history.transitionTo( history.getCurrentLocation(), setupHashListener, setupHashListener ) } history.listen(route =&gt; { this.apps.forEach((app) =&gt; { app._route = route }) }) } beforeEach (fn: Function): Function { return registerHook(this.beforeHooks, fn) } beforeResolve (fn: Function): Function { return registerHook(this.resolveHooks, fn) } afterEach (fn: Function): Function { return registerHook(this.afterHooks, fn) } onReady (cb: Function, errorCb?: Function) { this.history.onReady(cb, errorCb) } onError (errorCb: Function) { this.history.onError(errorCb) } push (location: RawLocation, onComplete?: Function, onAbort?: Function) { this.history.push(location, onComplete, onAbort) } replace (location: RawLocation, onComplete?: Function, onAbort?: Function) { this.history.replace(location, onComplete, onAbort) } go (n: number) { this.history.go(n) } back () { this.go(-1) } forward () { this.go(1) } getMatchedComponents (to?: RawLocation | Route): Array&lt;any&gt; { const route: any = to ? to.matched ? to : this.resolve(to).route : this.currentRoute if (!route) { return [] } return [].concat.apply([], route.matched.map(m =&gt; { return Object.keys(m.components).map(key =&gt; { return m.components[key] }) })) } resolve ( to: RawLocation, current?: Route, append?: boolean ): { location: Location, route: Route, href: string, normalizedTo: Location, resolved: Route } { const location = normalizeLocation( to, current || this.history.current, append, this ) const route = this.match(location, current) const fullPath = route.redirectedFrom || route.fullPath const base = this.history.base const href = createHref(base, fullPath, this.mode) return { location, route, href, normalizedTo: location, resolved: route } } addRoutes (routes: Array&lt;RouteConfig&gt;) { this.matcher.addRoutes(routes) if (this.history.current !== START) { this.history.transitionTo(this.history.getCurrentLocation()) } } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"魔法时空宝库"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"VueRouter 对象\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔法时空宝库\\",\\"url\\":\\"https://mpbug.gitee.io/player/\\"}]}"]]},"headers":[{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{},"readingTime":{"minutes":3.72,"words":1117},"filePathRelative":"views/Books/Front-end/JustVue2/vue-router/router.md","excerpt":"<h1> VueRouter 对象</h1>\\n<p>VueRouter 的实现是一个类，我们先对它做一个简单地分析，它的定义在 <code>src/index.js</code> 中：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">VueRouter</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">static</span> <span class=\\"token function-variable function\\">install</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">static</span> <span class=\\"token literal-property property\\">version</span><span class=\\"token operator\\">:</span> string<span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token literal-property property\\">app</span><span class=\\"token operator\\">:</span> any<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token literal-property property\\">apps</span><span class=\\"token operator\\">:</span> Array<span class=\\"token operator\\">&lt;</span>any<span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token literal-property property\\">ready</span><span class=\\"token operator\\">:</span> boolean<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token literal-property property\\">readyCbs</span><span class=\\"token operator\\">:</span> Array<span class=\\"token operator\\">&lt;</span>Function<span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token literal-property property\\">options</span><span class=\\"token operator\\">:</span> RouterOptions<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token literal-property property\\">mode</span><span class=\\"token operator\\">:</span> string<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token literal-property property\\">history</span><span class=\\"token operator\\">:</span> HashHistory <span class=\\"token operator\\">|</span> HTML5History <span class=\\"token operator\\">|</span> AbstractHistory<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token literal-property property\\">matcher</span><span class=\\"token operator\\">:</span> Matcher<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token literal-property property\\">fallback</span><span class=\\"token operator\\">:</span> boolean<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token literal-property property\\">beforeHooks</span><span class=\\"token operator\\">:</span> Array<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">?</span>NavigationGuard<span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token literal-property property\\">resolveHooks</span><span class=\\"token operator\\">:</span> Array<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">?</span>NavigationGuard<span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token literal-property property\\">afterHooks</span><span class=\\"token operator\\">:</span> Array<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">?</span>AfterNavigationHook<span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token function\\">constructor</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\"><span class=\\"token literal-property property\\">options</span><span class=\\"token operator\\">:</span> RouterOptions <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>app <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">null</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>apps <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>options <span class=\\"token operator\\">=</span> options\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>beforeHooks <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>resolveHooks <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>afterHooks <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>matcher <span class=\\"token operator\\">=</span> <span class=\\"token function\\">createMatcher</span><span class=\\"token punctuation\\">(</span>options<span class=\\"token punctuation\\">.</span>routes <span class=\\"token operator\\">||</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token keyword\\">let</span> mode <span class=\\"token operator\\">=</span> options<span class=\\"token punctuation\\">.</span>mode <span class=\\"token operator\\">||</span> <span class=\\"token string\\">'hash'</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>fallback <span class=\\"token operator\\">=</span> mode <span class=\\"token operator\\">===</span> <span class=\\"token string\\">'history'</span> <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token operator\\">!</span>supportsPushState <span class=\\"token operator\\">&amp;&amp;</span> options<span class=\\"token punctuation\\">.</span>fallback <span class=\\"token operator\\">!==</span> <span class=\\"token boolean\\">false</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>fallback<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mode <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'hash'</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>inBrowser<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mode <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'abstract'</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>mode <span class=\\"token operator\\">=</span> mode\\n\\n    <span class=\\"token keyword\\">switch</span> <span class=\\"token punctuation\\">(</span>mode<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">case</span> <span class=\\"token string\\">'history'</span><span class=\\"token operator\\">:</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>history <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">HTML5History</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">,</span> options<span class=\\"token punctuation\\">.</span>base<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">break</span>\\n      <span class=\\"token keyword\\">case</span> <span class=\\"token string\\">'hash'</span><span class=\\"token operator\\">:</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>history <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">HashHistory</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">,</span> options<span class=\\"token punctuation\\">.</span>base<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>fallback<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">break</span>\\n      <span class=\\"token keyword\\">case</span> <span class=\\"token string\\">'abstract'</span><span class=\\"token operator\\">:</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>history <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">AbstractHistory</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">,</span> options<span class=\\"token punctuation\\">.</span>base<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">break</span>\\n      <span class=\\"token keyword\\">default</span><span class=\\"token operator\\">:</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>process<span class=\\"token punctuation\\">.</span>env<span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">NODE_ENV</span> <span class=\\"token operator\\">!==</span> <span class=\\"token string\\">'production'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token function\\">assert</span><span class=\\"token punctuation\\">(</span><span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">,</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token string\\">invalid mode: </span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>mode<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token template-punctuation string\\">\`</span></span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">match</span> <span class=\\"token punctuation\\">(</span>\\n    <span class=\\"token literal-property property\\">raw</span><span class=\\"token operator\\">:</span> RawLocation<span class=\\"token punctuation\\">,</span>\\n    current<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> Route<span class=\\"token punctuation\\">,</span>\\n    redirectedFrom<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> Location\\n  <span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> Route <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>matcher<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">match</span><span class=\\"token punctuation\\">(</span>raw<span class=\\"token punctuation\\">,</span> current<span class=\\"token punctuation\\">,</span> redirectedFrom<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">get</span> <span class=\\"token function\\">currentRoute</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> <span class=\\"token operator\\">?</span>Route <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>history <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>history<span class=\\"token punctuation\\">.</span>current\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">init</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\"><span class=\\"token literal-property property\\">app</span><span class=\\"token operator\\">:</span> any</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    process<span class=\\"token punctuation\\">.</span>env<span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">NODE_ENV</span> <span class=\\"token operator\\">!==</span> <span class=\\"token string\\">'production'</span> <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token function\\">assert</span><span class=\\"token punctuation\\">(</span>\\n      install<span class=\\"token punctuation\\">.</span>installed<span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token string\\">not installed. Make sure to call \\\\\`Vue.use(VueRouter)\\\\\` </span><span class=\\"token template-punctuation string\\">\`</span></span> <span class=\\"token operator\\">+</span>\\n      <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token string\\">before creating root instance.</span><span class=\\"token template-punctuation string\\">\`</span></span>\\n    <span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>apps<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>app<span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>app<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">return</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>app <span class=\\"token operator\\">=</span> app\\n\\n    <span class=\\"token keyword\\">const</span> history <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>history\\n\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>history <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">HTML5History</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      history<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">transitionTo</span><span class=\\"token punctuation\\">(</span>history<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getCurrentLocation</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>history <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">HashHistory</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">setupHashListener</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n        history<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setupListeners</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n      <span class=\\"token punctuation\\">}</span>\\n      history<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">transitionTo</span><span class=\\"token punctuation\\">(</span>\\n        history<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getCurrentLocation</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n        setupHashListener<span class=\\"token punctuation\\">,</span>\\n        setupHashListener\\n      <span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    history<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">listen</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">route</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>apps<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">app</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n        app<span class=\\"token punctuation\\">.</span>_route <span class=\\"token operator\\">=</span> route\\n      <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">beforeEach</span> <span class=\\"token punctuation\\">(</span>fn<span class=\\"token operator\\">:</span> Function<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> Function <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">registerHook</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>beforeHooks<span class=\\"token punctuation\\">,</span> fn<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">beforeResolve</span> <span class=\\"token punctuation\\">(</span>fn<span class=\\"token operator\\">:</span> Function<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> Function <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">registerHook</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>resolveHooks<span class=\\"token punctuation\\">,</span> fn<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">afterEach</span> <span class=\\"token punctuation\\">(</span>fn<span class=\\"token operator\\">:</span> Function<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> Function <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">registerHook</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>afterHooks<span class=\\"token punctuation\\">,</span> fn<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">onReady</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\"><span class=\\"token literal-property property\\">cb</span><span class=\\"token operator\\">:</span> Function<span class=\\"token punctuation\\">,</span> errorCb<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> Function</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>history<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">onReady</span><span class=\\"token punctuation\\">(</span>cb<span class=\\"token punctuation\\">,</span> errorCb<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">onError</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\"><span class=\\"token literal-property property\\">errorCb</span><span class=\\"token operator\\">:</span> Function</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>history<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">onError</span><span class=\\"token punctuation\\">(</span>errorCb<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">push</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\"><span class=\\"token literal-property property\\">location</span><span class=\\"token operator\\">:</span> RawLocation<span class=\\"token punctuation\\">,</span> onComplete<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> Function<span class=\\"token punctuation\\">,</span> onAbort<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> Function</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>history<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>location<span class=\\"token punctuation\\">,</span> onComplete<span class=\\"token punctuation\\">,</span> onAbort<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">replace</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\"><span class=\\"token literal-property property\\">location</span><span class=\\"token operator\\">:</span> RawLocation<span class=\\"token punctuation\\">,</span> onComplete<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> Function<span class=\\"token punctuation\\">,</span> onAbort<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> Function</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>history<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">replace</span><span class=\\"token punctuation\\">(</span>location<span class=\\"token punctuation\\">,</span> onComplete<span class=\\"token punctuation\\">,</span> onAbort<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">go</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\"><span class=\\"token literal-property property\\">n</span><span class=\\"token operator\\">:</span> number</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>history<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">go</span><span class=\\"token punctuation\\">(</span>n<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">back</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">go</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">forward</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">go</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">getMatchedComponents</span> <span class=\\"token punctuation\\">(</span>to<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> RawLocation <span class=\\"token operator\\">|</span> Route<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> Array<span class=\\"token operator\\">&lt;</span>any<span class=\\"token operator\\">&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">const</span> <span class=\\"token literal-property property\\">route</span><span class=\\"token operator\\">:</span> any <span class=\\"token operator\\">=</span> to\\n      <span class=\\"token operator\\">?</span> to<span class=\\"token punctuation\\">.</span>matched\\n        <span class=\\"token operator\\">?</span> to\\n        <span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">resolve</span><span class=\\"token punctuation\\">(</span>to<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>route\\n      <span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>currentRoute\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>route<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">concat</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">apply</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> route<span class=\\"token punctuation\\">.</span>matched<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">m</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">return</span> Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">keys</span><span class=\\"token punctuation\\">(</span>m<span class=\\"token punctuation\\">.</span>components<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">key</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> m<span class=\\"token punctuation\\">.</span>components<span class=\\"token punctuation\\">[</span>key<span class=\\"token punctuation\\">]</span>\\n      <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">resolve</span> <span class=\\"token punctuation\\">(</span>\\n    <span class=\\"token literal-property property\\">to</span><span class=\\"token operator\\">:</span> RawLocation<span class=\\"token punctuation\\">,</span>\\n    current<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> Route<span class=\\"token punctuation\\">,</span>\\n    append<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> boolean\\n  <span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token literal-property property\\">location</span><span class=\\"token operator\\">:</span> Location<span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">route</span><span class=\\"token operator\\">:</span> Route<span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">href</span><span class=\\"token operator\\">:</span> string<span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">normalizedTo</span><span class=\\"token operator\\">:</span> Location<span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">resolved</span><span class=\\"token operator\\">:</span> Route\\n  <span class=\\"token punctuation\\">}</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">const</span> location <span class=\\"token operator\\">=</span> <span class=\\"token function\\">normalizeLocation</span><span class=\\"token punctuation\\">(</span>\\n      to<span class=\\"token punctuation\\">,</span>\\n      current <span class=\\"token operator\\">||</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>history<span class=\\"token punctuation\\">.</span>current<span class=\\"token punctuation\\">,</span>\\n      append<span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token keyword\\">this</span>\\n    <span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">const</span> route <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">match</span><span class=\\"token punctuation\\">(</span>location<span class=\\"token punctuation\\">,</span> current<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">const</span> fullPath <span class=\\"token operator\\">=</span> route<span class=\\"token punctuation\\">.</span>redirectedFrom <span class=\\"token operator\\">||</span> route<span class=\\"token punctuation\\">.</span>fullPath\\n    <span class=\\"token keyword\\">const</span> base <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>history<span class=\\"token punctuation\\">.</span>base\\n    <span class=\\"token keyword\\">const</span> href <span class=\\"token operator\\">=</span> <span class=\\"token function\\">createHref</span><span class=\\"token punctuation\\">(</span>base<span class=\\"token punctuation\\">,</span> fullPath<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>mode<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">{</span>\\n      location<span class=\\"token punctuation\\">,</span>\\n      route<span class=\\"token punctuation\\">,</span>\\n      href<span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token literal-property property\\">normalizedTo</span><span class=\\"token operator\\">:</span> location<span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token literal-property property\\">resolved</span><span class=\\"token operator\\">:</span> route\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">addRoutes</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\"><span class=\\"token literal-property property\\">routes</span><span class=\\"token operator\\">:</span> Array<span class=\\"token operator\\">&lt;</span>RouteConfig<span class=\\"token operator\\">&gt;</span></span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>matcher<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addRoutes</span><span class=\\"token punctuation\\">(</span>routes<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>history<span class=\\"token punctuation\\">.</span>current <span class=\\"token operator\\">!==</span> <span class=\\"token constant\\">START</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>history<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">transitionTo</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>history<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getCurrentLocation</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
