const e=JSON.parse('{"key":"v-af2faa90","path":"/views/Books/Front-end/JustVue2/reactive/next-tick.html","title":"nextTick","lang":"zh-CN","frontmatter":{"description":"nextTick nextTick 是 Vue 的一个核心实现，在介绍 Vue 的 nextTick 之前，为了方便大家理解，我先简单介绍一下 JS 的运行机制。 JS 运行机制 JS 执行是单线程的，它是基于事件循环的。事件循环大致分为以下几个步骤： （1）所有同步任务都在主线程上执行，形成一个执行栈（execution context stack）。 （2）主线程之外，还存在一个\\"任务队列\\"（task queue）。只要异步任务有了运行结果，就在\\"任务队列\\"之中放置一个事件。","head":[["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/Books/Front-end/JustVue2/reactive/next-tick.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:title","content":"nextTick"}],["meta",{"property":"og:description","content":"nextTick nextTick 是 Vue 的一个核心实现，在介绍 Vue 的 nextTick 之前，为了方便大家理解，我先简单介绍一下 JS 的运行机制。 JS 运行机制 JS 执行是单线程的，它是基于事件循环的。事件循环大致分为以下几个步骤： （1）所有同步任务都在主线程上执行，形成一个执行栈（execution context stack）。 （2）主线程之外，还存在一个\\"任务队列\\"（task queue）。只要异步任务有了运行结果，就在\\"任务队列\\"之中放置一个事件。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"魔法时空宝库"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nextTick\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔法时空宝库\\",\\"url\\":\\"https://mpbug.gitee.io/player/\\"}]}"]]},"headers":[{"level":2,"title":"JS 运行机制","slug":"js-运行机制","link":"#js-运行机制","children":[]},{"level":2,"title":"Vue 的实现","slug":"vue-的实现","link":"#vue-的实现","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{},"readingTime":{"minutes":5.2,"words":1560},"filePathRelative":"views/Books/Front-end/JustVue2/reactive/next-tick.md","excerpt":"<h1> nextTick</h1>\\n<p><code>nextTick</code> 是 Vue 的一个核心实现，在介绍 Vue 的 nextTick 之前，为了方便大家理解，我先简单介绍一下 JS 的运行机制。</p>\\n<h2> JS 运行机制</h2>\\n<p>JS 执行是单线程的，它是基于事件循环的。事件循环大致分为以下几个步骤：</p>\\n<p>（1）所有同步任务都在主线程上执行，形成一个执行栈（execution context stack）。</p>\\n<p>（2）主线程之外，还存在一个\\"任务队列\\"（task queue）。只要异步任务有了运行结果，就在\\"任务队列\\"之中放置一个事件。</p>","autoDesc":true}');export{e as data};
