const t=JSON.parse(`{"key":"v-42570aba","path":"/views/Books/Front-end/TypescriptMaster/tips/lazyObjectLiteralInitialization.html","title":"对象字面量的惰性初始化","lang":"zh-CN","frontmatter":{"description":"对象字面量的惰性初始化 在 JavaScript 中，像这样用字面量初始化对象的写法十分常见： let foo = {}; foo.bar = 123; foo.bas = 'Hello World';","head":[["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/Books/Front-end/TypescriptMaster/tips/lazyObjectLiteralInitialization.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:title","content":"对象字面量的惰性初始化"}],["meta",{"property":"og:description","content":"对象字面量的惰性初始化 在 JavaScript 中，像这样用字面量初始化对象的写法十分常见： let foo = {}; foo.bar = 123; foo.bas = 'Hello World';"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"魔法时空宝库"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"对象字面量的惰性初始化\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔法时空宝库\\",\\"url\\":\\"https://mpbug.gitee.io/player/\\"}]}"]]},"headers":[{"level":2,"title":"最好的解决方案","slug":"最好的解决方案","link":"#最好的解决方案","children":[]},{"level":2,"title":"快速解决方案","slug":"快速解决方案","link":"#快速解决方案","children":[]},{"level":2,"title":"折中的解决方案","slug":"折中的解决方案","link":"#折中的解决方案","children":[]}],"git":{},"readingTime":{"minutes":1.7,"words":510},"filePathRelative":"views/Books/Front-end/TypescriptMaster/tips/lazyObjectLiteralInitialization.md","excerpt":"<h1> 对象字面量的惰性初始化</h1>\\n<p>在 JavaScript 中，像这样用字面量初始化对象的写法十分常见：</p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">let</span> foo <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\nfoo<span class=\\"token punctuation\\">.</span>bar <span class=\\"token operator\\">=</span> <span class=\\"token number\\">123</span><span class=\\"token punctuation\\">;</span>\\nfoo<span class=\\"token punctuation\\">.</span>bas <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'Hello World'</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{t as data};
