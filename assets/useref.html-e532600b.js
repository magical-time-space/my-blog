const e=JSON.parse('{"key":"v-2633a0db","path":"/views/Books/Front-end/JustReact/hooks/useref.html","title":"","lang":"zh-CN","frontmatter":{"description":"ref是reference（引用）的缩写。在React中，我们习惯用ref保存DOM。 事实上，任何需要被\\"引用\\"的数据都可以保存在ref中，useRef的出现将这种思想进一步发扬光大。 在Hooks数据结构一节我们讲到：","head":[["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/Books/Front-end/JustReact/hooks/useref.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:description","content":"ref是reference（引用）的缩写。在React中，我们习惯用ref保存DOM。 事实上，任何需要被\\"引用\\"的数据都可以保存在ref中，useRef的出现将这种思想进一步发扬光大。 在Hooks数据结构一节我们讲到："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"魔法时空宝库"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔法时空宝库\\",\\"url\\":\\"https://mpbug.gitee.io/player/\\"}]}"]]},"headers":[{"level":2,"title":"useRef","slug":"useref","link":"#useref","children":[]},{"level":2,"title":"ref的工作流程","slug":"ref的工作流程","link":"#ref的工作流程","children":[]},{"level":2,"title":"render阶段","slug":"render阶段","link":"#render阶段","children":[]},{"level":2,"title":"commit阶段","slug":"commit阶段","link":"#commit阶段","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{},"readingTime":{"minutes":4.19,"words":1257},"filePathRelative":"views/Books/Front-end/JustReact/hooks/useref.md","excerpt":"<p><code>ref</code>是<code>reference</code>（引用）的缩写。在<code>React</code>中，我们习惯用<code>ref</code>保存<code>DOM</code>。</p>\\n<p>事实上，任何需要被\\"引用\\"的数据都可以保存在<code>ref</code>中，<code>useRef</code>的出现将这种思想进一步发扬光大。</p>\\n<p>在<a href=\\"/views/Books/Front-end/JustReact/hooks/structure.html#memoizedstate\\" target=\\"blank\\">Hooks数据结构一节</a>我们讲到：</p>","autoDesc":true}');export{e as data};
