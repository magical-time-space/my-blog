const e=JSON.parse('{"key":"v-f5535fc2","path":"/views/Books/Front-end/JustVue2/reactive/props.html","title":"Props (v2.6.11)","lang":"zh-CN","frontmatter":{"description":"Props (v2.6.11) Props 作为组件的核心特性之一，也是我们平时开发 Vue 项目中接触最多的特性之一，它可以让组件的功能变得丰富，也是父子组件通讯的一个渠道。那么它的实现原理是怎样的，我们来一探究竟。 规范化 在初始化 props 之前，首先会对 props 做一次 normalize，它发生在 mergeOptions 的时候，在 src/core/util/options.js 中：","head":[["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/Books/Front-end/JustVue2/reactive/props.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:title","content":"Props (v2.6.11)"}],["meta",{"property":"og:description","content":"Props (v2.6.11) Props 作为组件的核心特性之一，也是我们平时开发 Vue 项目中接触最多的特性之一，它可以让组件的功能变得丰富，也是父子组件通讯的一个渠道。那么它的实现原理是怎样的，我们来一探究竟。 规范化 在初始化 props 之前，首先会对 props 做一次 normalize，它发生在 mergeOptions 的时候，在 src/core/util/options.js 中："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"魔法时空宝库"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Props (v2.6.11)\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔法时空宝库\\",\\"url\\":\\"https://mpbug.gitee.io/player/\\"}]}"]]},"headers":[{"level":2,"title":"规范化","slug":"规范化","link":"#规范化","children":[]},{"level":2,"title":"初始化","slug":"初始化","link":"#初始化","children":[{"level":3,"title":"校验","slug":"校验","link":"#校验","children":[]},{"level":3,"title":"响应式","slug":"响应式","link":"#响应式","children":[]},{"level":3,"title":"代理","slug":"代理","link":"#代理","children":[]}]},{"level":2,"title":"Props 更新","slug":"props-更新","link":"#props-更新","children":[{"level":3,"title":"子组件 props 更新","slug":"子组件-props-更新","link":"#子组件-props-更新","children":[]},{"level":3,"title":"子组件重新渲染","slug":"子组件重新渲染","link":"#子组件重新渲染","children":[]}]},{"level":2,"title":"toggleObserving","slug":"toggleobserving","link":"#toggleobserving","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{},"readingTime":{"minutes":16.07,"words":4821},"filePathRelative":"views/Books/Front-end/JustVue2/reactive/props.md","excerpt":"<h1> Props (v2.6.11)</h1>\\n<p><code>Props</code> 作为组件的核心特性之一，也是我们平时开发 Vue 项目中接触最多的特性之一，它可以让组件的功能变得丰富，也是父子组件通讯的一个渠道。那么它的实现原理是怎样的，我们来一探究竟。</p>\\n<h2> 规范化</h2>\\n<p>在初始化 <code>props</code> 之前，首先会对 <code>props</code> 做一次 <code>normalize</code>，它发生在 <code>mergeOptions</code> 的时候，在 <code>src/core/util/options.js</code> 中：</p>","autoDesc":true}');export{e as data};
