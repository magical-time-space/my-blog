import{_ as n,X as s,Y as a,a4 as p}from"./framework-d8252107.js";const t={},o=p(`<h3 id="格式化文本" tabindex="-1"><a class="header-anchor" href="#格式化文本" aria-hidden="true">#</a> 格式化文本</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 此代码返回字符串的字节长度</span>
<span class="token keyword">const</span> <span class="token function-variable function">byteSize</span> <span class="token operator">=</span> <span class="token parameter">str</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>str<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">;</span>

<span class="token comment">// 此段代码从Date对象里获取当前时间</span>
<span class="token keyword">const</span> <span class="token function-variable function">getColonTimeFromDate</span> <span class="token operator">=</span> <span class="token parameter">date</span> <span class="token operator">=&gt;</span> date<span class="token punctuation">.</span><span class="token function">toTimeString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// getColonTimeFromDate(new Date()); // &quot;08:38:00&quot;</span>

<span class="token comment">// 此段代码的主要功能就是返回数据的类型</span>
<span class="token keyword">const</span> <span class="token function-variable function">getType</span> <span class="token operator">=</span> <span class="token parameter">v</span> <span class="token operator">=&gt;</span>
    v <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">:</span> v <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">&#39;null&#39;</span> <span class="token operator">:</span> v<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// getType(new Set([1, 2, 3])); // &#39;set&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">isType</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span>name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">return</span> type <span class="token operator">&amp;&amp;</span> name <span class="token operator">&amp;&amp;</span> type<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>name <span class="token operator">==</span> name<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// 此段代码返回DOM元素是否包含指定的Class样式</span>
<span class="token keyword">const</span> <span class="token function-variable function">hasClass</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> className</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> el<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取字符串里的数字</span>
<span class="token keyword">const</span> <span class="token function-variable function">getNumber</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>str<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^\\d]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token comment">// 检查属性归属</span>
<span class="token keyword">const</span> <span class="token function-variable function">has</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> obj <span class="token operator">&amp;&amp;</span> name <span class="token operator">&amp;&amp;</span> obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token comment">// 检查空集</span>
<span class="token keyword">const</span> <span class="token function-variable function">isNull</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token operator">!</span>obj<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span>

<span class="token comment">// 随机整数</span>
<span class="token keyword">function</span> <span class="token function">getRandomInt</span><span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    min <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>min<span class="token punctuation">)</span><span class="token punctuation">;</span>
    max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min<span class="token punctuation">)</span> <span class="token operator">+</span> min<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>

<span class="token comment">// 打印容量大小带单位</span>
<span class="token keyword">function</span> <span class="token function">toStringUint</span><span class="token punctuation">(</span><span class="token parameter">size<span class="token punctuation">,</span> limit <span class="token operator">=</span> <span class="token number">2</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> kb <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">,</span> unit <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;KB&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;MB&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;GB&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;TB&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;PB&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;EB&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ZB&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;YB&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span> <span class="token operator">/</span> Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kb<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>size <span class="token operator">||</span> i <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">Infinity</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>size <span class="token operator">/</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>kb<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span>limit<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> unit<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 格式化时间</span>
<span class="token keyword">function</span> <span class="token function">formatTime</span><span class="token punctuation">(</span><span class="token parameter">time<span class="token punctuation">,</span> format</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    time <span class="token operator">=</span> <span class="token keyword">typeof</span> <span class="token punctuation">(</span>time<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span> <span class="token operator">?</span> time <span class="token operator">:</span> <span class="token punctuation">(</span>time <span class="token keyword">instanceof</span> <span class="token class-name">Date</span> <span class="token operator">?</span> time<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">(</span>format<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">||</span> <span class="token operator">!</span>format<span class="token punctuation">)</span> format <span class="token operator">=</span> <span class="token string">&#39;yyyy-MM-dd hh:mm:ss&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> _time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span>
    time <span class="token operator">=</span> _time<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\s\\:]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    time<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;01&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;02&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;03&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;04&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;05&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;06&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;07&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;08&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;09&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;11&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;12&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>_time<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> _mapping <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token constant">MM</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">dd</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token literal-property property">yyyy</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token literal-property property">hh</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span><span class="token literal-property property">mm</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span><span class="token literal-property property">ss</span><span class="token operator">:</span> <span class="token number">6</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> format<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">([Mmdhs]|y{2})\\1</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> time<span class="token punctuation">[</span>_mapping<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 秒 转 时分</span>
<span class="token keyword">function</span> <span class="token function">formatSecToHourMin</span><span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>time<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">const</span> h <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>time <span class="token operator">/</span> <span class="token number">3600</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> minute <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>time <span class="token operator">/</span> <span class="token number">60</span> <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> second <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>time <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> hours <span class="token operator">=</span> h <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">+</span> h <span class="token operator">:</span> h
    <span class="token keyword">const</span> formatSecond <span class="token operator">=</span> second <span class="token operator">&gt;</span> <span class="token number">59</span> <span class="token operator">?</span> <span class="token number">59</span> <span class="token operator">:</span> second
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hours <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hours<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>minute <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">+</span> minute <span class="token operator">:</span> minute<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>formatSecond <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">+</span> formatSecond <span class="token operator">:</span> formatSecond<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>

<span class="token comment">// html转义</span>
<span class="token keyword">function</span> <span class="token function">escape2Html</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span>
    <span class="token keyword">var</span> arrEntities <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;lt&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&lt;&#39;</span><span class="token punctuation">,</span><span class="token string-property property">&#39;gt&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&gt;&#39;</span><span class="token punctuation">,</span><span class="token string-property property">&#39;nbsp&#39;</span><span class="token operator">:</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">,</span><span class="token string-property property">&#39;amp&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&amp;&#39;</span><span class="token punctuation">,</span><span class="token string-property property">&#39;quot&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&quot;&#39;</span><span class="token punctuation">,</span><span class="token string-property property">&#39;#40&#39;</span><span class="token operator">:</span> <span class="token string">&#39;(&#39;</span><span class="token punctuation">,</span><span class="token string-property property">&#39;#41&#39;</span><span class="token operator">:</span> <span class="token string">&#39;)&#39;</span><span class="token punctuation">,</span><span class="token string-property property">&#39;#39&#39;</span><span class="token operator">:</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&#39;apos&#39;</span><span class="token operator">:</span> <span class="token string">&#39;-&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&amp;(lt|gt|nbsp|amp|quot|#40|#41|#39|apos);</span><span class="token regex-delimiter">/</span><span class="token regex-flags">ig</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">all<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> arrEntities<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),e=[o];function c(l,u){return s(),a("div",null,e)}const k=n(t,[["render",c],["__file","format.html.vue"]]);export{k as default};
