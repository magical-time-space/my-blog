const t=JSON.parse('{"key":"v-0054b83a","path":"/views/Books/Front-end/JustVue2/extend/tansition.html","title":"transition","lang":"zh-CN","frontmatter":{"description":"transition 在我们平时的前端项目开发中，经常会遇到如下需求，一个 DOM 节点的插入和删除或者是显示和隐藏，我们不想让它特别生硬，通常会考虑加一些过渡效果。 Vue.js 除了实现了强大的数据驱动，组件化的能力，也给我们提供了一整套过渡的解决方案。它内置了 &lt;transition&gt; 组件，我们可以利用它配合一些 CSS3 样式很方便地实现过渡动画，也可以利用它配合 JavaScript 的钩子函数实现过渡动画，在下列情形中，可以给任何元素和组件添加 entering/leaving 过渡： 条件渲染 (使用 v-if) 条件展示 (使用 v-show) 动态组件 组件根节点","head":[["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/Books/Front-end/JustVue2/extend/tansition.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:title","content":"transition"}],["meta",{"property":"og:description","content":"transition 在我们平时的前端项目开发中，经常会遇到如下需求，一个 DOM 节点的插入和删除或者是显示和隐藏，我们不想让它特别生硬，通常会考虑加一些过渡效果。 Vue.js 除了实现了强大的数据驱动，组件化的能力，也给我们提供了一整套过渡的解决方案。它内置了 &lt;transition&gt; 组件，我们可以利用它配合一些 CSS3 样式很方便地实现过渡动画，也可以利用它配合 JavaScript 的钩子函数实现过渡动画，在下列情形中，可以给任何元素和组件添加 entering/leaving 过渡： 条件渲染 (使用 v-if) 条件展示 (使用 v-show) 动态组件 组件根节点"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"魔法时空宝库"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"transition\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔法时空宝库\\",\\"url\\":\\"https://mpbug.gitee.io/player/\\"}]}"]]},"headers":[{"level":2,"title":"内置组件","slug":"内置组件","link":"#内置组件","children":[]},{"level":2,"title":"transition module","slug":"transition-module","link":"#transition-module","children":[]},{"level":2,"title":"entering","slug":"entering","link":"#entering","children":[]},{"level":2,"title":"leaving","slug":"leaving","link":"#leaving","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{},"readingTime":{"minutes":14.71,"words":4413},"filePathRelative":"views/Books/Front-end/JustVue2/extend/tansition.md","excerpt":"<h1> transition</h1>\\n<p>在我们平时的前端项目开发中，经常会遇到如下需求，一个 DOM 节点的插入和删除或者是显示和隐藏，我们不想让它特别生硬，通常会考虑加一些过渡效果。</p>\\n<p>Vue.js 除了实现了强大的数据驱动，组件化的能力，也给我们提供了一整套过渡的解决方案。它内置了 <code>&lt;transition&gt;</code> 组件，我们可以利用它配合一些 CSS3 样式很方便地实现过渡动画，也可以利用它配合 JavaScript 的钩子函数实现过渡动画，在下列情形中，可以给任何元素和组件添加 entering/leaving 过渡：</p>\\n<ul>\\n<li>条件渲染 (使用 <code>v-if</code>)</li>\\n<li>条件展示 (使用 <code>v-show</code>)</li>\\n<li>动态组件</li>\\n<li>组件根节点</li>\\n</ul>","autoDesc":true}');export{t as data};
