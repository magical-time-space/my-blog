const e=JSON.parse('{"key":"v-215e8b9e","path":"/views/Books/Front-end/TypescriptMaster/tips/infer.html","title":"infer","lang":"zh-CN","frontmatter":{"description":"infer 介绍 infer 最早出现在此 PR 中，表示在 extends 条件语句中待推断的类型变量。 简单示例如下： type ParamType&lt;T&gt; = T extends (arg: infer P) =&gt; any ? P : T;","head":[["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/Books/Front-end/TypescriptMaster/tips/infer.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:title","content":"infer"}],["meta",{"property":"og:description","content":"infer 介绍 infer 最早出现在此 PR 中，表示在 extends 条件语句中待推断的类型变量。 简单示例如下： type ParamType&lt;T&gt; = T extends (arg: infer P) =&gt; any ? P : T;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"魔法时空宝库"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"infer\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔法时空宝库\\",\\"url\\":\\"https://mpbug.gitee.io/player/\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"内置类型","slug":"内置类型","link":"#内置类型","children":[]},{"level":2,"title":"一些用例","slug":"一些用例","link":"#一些用例","children":[]},{"level":2,"title":"LeetCode 的一道 TypeScript 面试题","slug":"leetcode-的一道-typescript-面试题","link":"#leetcode-的一道-typescript-面试题","children":[]}],"git":{},"readingTime":{"minutes":4.33,"words":1300},"filePathRelative":"views/Books/Front-end/TypescriptMaster/tips/infer.md","excerpt":"<h1> infer</h1>\\n<h2> 介绍</h2>\\n<p><code>infer</code> 最早出现在此 <a href=\\"https://github.com/Microsoft/TypeScript/pull/21496\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">PR</a> 中，表示在 <code>extends</code> 条件语句中待推断的类型变量。</p>\\n<p>简单示例如下：</p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">type</span> <span class=\\"token class-name\\">ParamType<span class=\\"token operator\\">&lt;</span><span class=\\"token constant\\">T</span><span class=\\"token operator\\">&gt;</span></span> <span class=\\"token operator\\">=</span> <span class=\\"token constant\\">T</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token punctuation\\">(</span>arg<span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">infer</span> <span class=\\"token constant\\">P</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token builtin\\">any</span> <span class=\\"token operator\\">?</span> <span class=\\"token constant\\">P</span> <span class=\\"token operator\\">:</span> <span class=\\"token constant\\">T</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
