const t=JSON.parse('{"key":"v-2baea832","path":"/views/DevLog/Web/javascript/Naming/html-css.html","title":"术语 html-css","lang":"zh-CN","frontmatter":{"title":"术语 html-css","icon":"edit","date":"2023-04-27T20:46:40.000Z","category":["术语"],"tag":["html","css"],"description":"便于编程时更规范的命名，变量名、类名、函数名，需要收集和学习编程常用术语。 Glossary 术语表 规范编程命名 名称 描述 应用场景 包装 Wrapper n. 包装纸，包装器，封装器。 单体装饰 Container n. 容器，包装容器，集装箱，货柜。多元素组合 多元素组合 Box n. 箱子，盒子。 Plane n. 平面。 header n. 头部、页眉 通常横跨于整个页面顶部有大标题或标志 nav n. 导航栏 通常用菜单按钮、链接或标签页表示 main n. 主内容 中心的大部分区域是当前网页大多数的独有内容 menu n. 菜单 article n. 文档 表示文档、页面、应用或网站中的独立结构 section n. 章节 表示 HTML 文档中一个通用独立章节 address n. 地址 表示 某个人或某个组织（等等）的联系信息 content n. 内容 aside n. 侧边栏 一些外围信息、链接、引用、广告等 footer n. 底部、页脚 横跨页面底部和标题一样，页脚是放置公共信息 布局 Flow 流布局。默认布局 ( Normal Flow ) 按代码顺序从上到下显示 浏览器默认的 HTML 布局方式 display: black, inline, inline-block position: static Flex 弹性盒子布局 ( Flexible Box Layout Module ) 专门设计出来用于创建横向或是纵向的一维页面布局 父级：display: flex, flex-direction: row, align-items: stretch 默认子元素被拉伸与父级同高。 子级: flex: 1, flex-grow, flex-shrink, flex-basis 增长系数，收缩系数，初始系数 父级: align-items: stretch 子级: align-self: flex-end Grid 网格布局。column 列。row 行。gutter 沟槽 (间隙)。 二维布局系统。行列排版。 父级: display: grid; grid-template-columns: auto auto auto; 三列平分布局 grid-template-columns: 1fr 1fr 1fr ; fr 单位代表网格容器中可用空间的一份 grid-gap: 10px; 网格间隙 10px 隐式网格: grid-auto-rows: 100px; 所有隐式网格行高100px grid-auto-rows : minmax(100px, auto) minmax 至少100px grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); auto-fill 自动多列填充 Float 浮动布局。 文本内图像浮动。 float: left; 元素浮动文本左边 clear: left; 文本段落停止左浮动 .wrapper::after{ content: \\"\\"; clear: both; display:block; } 后方插入生成内容，附清除浮动。( clearfix CSS ) .wrapper { overflow: auto; } 盒子停止浮动。( 影响：滚动条或裁剪阴影 ) 现代方案: display: flow-root; 创建块格式化上下文（BFC），盒子就会停止浮动。 Position 定位。静态：static，默认值。 正常文档布局流。 相对：relative。top, bottom, left, right 移动方位。 正常文档布局流。单位：px, mm, rems, % 绝对：absolute。top, bottom, left, right 移动方位。 不在正常文档布局流中。独立层。例如：弹窗，菜单，翻转面板，拖动元素。 z-index : 1; 堆叠顺序，z 轴 固定：fixed。top, bottom, left, right 移动方位。 绝对定位将元素固定在相对于其位置最近的祖先 粘性：sticky。top, bottom, left, right 移动方位。 相对固定位置。滚动到阈值后位置固定起来。 Multi-column 多列布局。三列布局：column-count: 3; 列宽布局：column-width: 200px; 列间间隙：column-gap: 20px; 列间样式：column-rule: 4px dotted blue; Table 表格布局： 父级：display: table; 子级：display: table-caption; caption-side: bottom; 表格标题位于表格布局底部 ( 头部、左右 ) 子级：display: table-cell; RWD 响应式布局。Responsive Web Design。 大小屏幕自适应布局。 媒体查询。Media queries。@media all, print, screen, speech, orientation 根据设备特征数值调整 CSS @media screen and ( min-width: 800px ) 媒体查询调配样式 @import url; 导入样式 灵活网络。动态运算出样式值。calc ( ) 视口单位：vw, vh &lt;meta name=\\"viewport\\" content=\\"width=device-width,initial-scale=1\\"&gt; 视口宽度设定为设备的宽度 专用 div n. 分区 section n. 段，部分，章节 article 文章 element 元素 block-level 区块级。例如：&lt;div&gt; &lt;h1&gt; &lt;p&gt; &lt;ul&gt; &lt;table&gt; inline-level 内联级。例如：&lt;span&gt; &lt;b&gt; &lt;td&gt; &lt;a&gt; &lt;img&gt;","head":[["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/DevLog/Web/javascript/Naming/html-css.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:title","content":"术语 html-css"}],["meta",{"property":"og:description","content":"便于编程时更规范的命名，变量名、类名、函数名，需要收集和学习编程常用术语。 Glossary 术语表 规范编程命名 名称 描述 应用场景 包装 Wrapper n. 包装纸，包装器，封装器。 单体装饰 Container n. 容器，包装容器，集装箱，货柜。多元素组合 多元素组合 Box n. 箱子，盒子。 Plane n. 平面。 header n. 头部、页眉 通常横跨于整个页面顶部有大标题或标志 nav n. 导航栏 通常用菜单按钮、链接或标签页表示 main n. 主内容 中心的大部分区域是当前网页大多数的独有内容 menu n. 菜单 article n. 文档 表示文档、页面、应用或网站中的独立结构 section n. 章节 表示 HTML 文档中一个通用独立章节 address n. 地址 表示 某个人或某个组织（等等）的联系信息 content n. 内容 aside n. 侧边栏 一些外围信息、链接、引用、广告等 footer n. 底部、页脚 横跨页面底部和标题一样，页脚是放置公共信息 布局 Flow 流布局。默认布局 ( Normal Flow ) 按代码顺序从上到下显示 浏览器默认的 HTML 布局方式 display: black, inline, inline-block position: static Flex 弹性盒子布局 ( Flexible Box Layout Module ) 专门设计出来用于创建横向或是纵向的一维页面布局 父级：display: flex, flex-direction: row, align-items: stretch 默认子元素被拉伸与父级同高。 子级: flex: 1, flex-grow, flex-shrink, flex-basis 增长系数，收缩系数，初始系数 父级: align-items: stretch 子级: align-self: flex-end Grid 网格布局。column 列。row 行。gutter 沟槽 (间隙)。 二维布局系统。行列排版。 父级: display: grid; grid-template-columns: auto auto auto; 三列平分布局 grid-template-columns: 1fr 1fr 1fr ; fr 单位代表网格容器中可用空间的一份 grid-gap: 10px; 网格间隙 10px 隐式网格: grid-auto-rows: 100px; 所有隐式网格行高100px grid-auto-rows : minmax(100px, auto) minmax 至少100px grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); auto-fill 自动多列填充 Float 浮动布局。 文本内图像浮动。 float: left; 元素浮动文本左边 clear: left; 文本段落停止左浮动 .wrapper::after{ content: \\"\\"; clear: both; display:block; } 后方插入生成内容，附清除浮动。( clearfix CSS ) .wrapper { overflow: auto; } 盒子停止浮动。( 影响：滚动条或裁剪阴影 ) 现代方案: display: flow-root; 创建块格式化上下文（BFC），盒子就会停止浮动。 Position 定位。静态：static，默认值。 正常文档布局流。 相对：relative。top, bottom, left, right 移动方位。 正常文档布局流。单位：px, mm, rems, % 绝对：absolute。top, bottom, left, right 移动方位。 不在正常文档布局流中。独立层。例如：弹窗，菜单，翻转面板，拖动元素。 z-index : 1; 堆叠顺序，z 轴 固定：fixed。top, bottom, left, right 移动方位。 绝对定位将元素固定在相对于其位置最近的祖先 粘性：sticky。top, bottom, left, right 移动方位。 相对固定位置。滚动到阈值后位置固定起来。 Multi-column 多列布局。三列布局：column-count: 3; 列宽布局：column-width: 200px; 列间间隙：column-gap: 20px; 列间样式：column-rule: 4px dotted blue; Table 表格布局： 父级：display: table; 子级：display: table-caption; caption-side: bottom; 表格标题位于表格布局底部 ( 头部、左右 ) 子级：display: table-cell; RWD 响应式布局。Responsive Web Design。 大小屏幕自适应布局。 媒体查询。Media queries。@media all, print, screen, speech, orientation 根据设备特征数值调整 CSS @media screen and ( min-width: 800px ) 媒体查询调配样式 @import url; 导入样式 灵活网络。动态运算出样式值。calc ( ) 视口单位：vw, vh &lt;meta name=\\"viewport\\" content=\\"width=device-width,initial-scale=1\\"&gt; 视口宽度设定为设备的宽度 专用 div n. 分区 section n. 段，部分，章节 article 文章 element 元素 block-level 区块级。例如：&lt;div&gt; &lt;h1&gt; &lt;p&gt; &lt;ul&gt; &lt;table&gt; inline-level 内联级。例如：&lt;span&gt; &lt;b&gt; &lt;td&gt; &lt;a&gt; &lt;img&gt;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"魔法时空宝库"}],["meta",{"property":"article:tag","content":"html"}],["meta",{"property":"article:tag","content":"css"}],["meta",{"property":"article:published_time","content":"2023-04-27T20:46:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"术语 html-css\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-27T20:46:40.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔法时空宝库\\",\\"url\\":\\"https://mpbug.gitee.io/player/\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":3.38,"words":1013},"filePathRelative":"views/DevLog/Web/javascript/Naming/html-css.md","localizedDate":"2023年4月28日","excerpt":"<p>便于编程时更规范的命名，变量名、类名、函数名，需要收集和学习编程常用术语。</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Glossary</th>\\n<th>术语表</th>\\n<th>规范编程命名</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>名称</td>\\n<td>描述</td>\\n<td>应用场景</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>包装</td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>Wrapper</td>\\n<td>n. 包装纸，包装器，封装器。</td>\\n<td>单体装饰</td>\\n</tr>\\n<tr>\\n<td>Container</td>\\n<td>n. 容器，包装容器，集装箱，货柜。多元素组合</td>\\n<td>多元素组合</td>\\n</tr>\\n<tr>\\n<td>Box</td>\\n<td>n. 箱子，盒子。</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>Plane</td>\\n<td>n. 平面。</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>header</td>\\n<td>n. 头部、页眉</td>\\n<td>通常横跨于整个页面顶部有大标题或标志</td>\\n</tr>\\n<tr>\\n<td>nav</td>\\n<td>n. 导航栏</td>\\n<td>通常用菜单按钮、链接或标签页表示</td>\\n</tr>\\n<tr>\\n<td>main</td>\\n<td>n. 主内容</td>\\n<td>中心的大部分区域是当前网页大多数的独有内容</td>\\n</tr>\\n<tr>\\n<td>menu</td>\\n<td>n. 菜单</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>article</td>\\n<td>n. 文档</td>\\n<td>表示文档、页面、应用或网站中的独立结构</td>\\n</tr>\\n<tr>\\n<td>section</td>\\n<td>n. 章节</td>\\n<td>表示 HTML 文档中一个通用独立章节</td>\\n</tr>\\n<tr>\\n<td>address</td>\\n<td>n. 地址</td>\\n<td>表示 某个人或某个组织（等等）的联系信息</td>\\n</tr>\\n<tr>\\n<td>content</td>\\n<td>n. 内容</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>aside</td>\\n<td>n. 侧边栏</td>\\n<td>一些外围信息、链接、引用、广告等</td>\\n</tr>\\n<tr>\\n<td>footer</td>\\n<td>n. 底部、页脚</td>\\n<td>横跨页面底部和标题一样，页脚是放置公共信息</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>布局</td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>Flow</td>\\n<td>流布局。默认布局 ( Normal Flow ) 按代码顺序从上到下显示</td>\\n<td>浏览器默认的 HTML 布局方式</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>display: black, inline, inline-block</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>position: static</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>Flex</td>\\n<td>弹性盒子布局 ( Flexible Box Layout Module )</td>\\n<td>专门设计出来用于创建横向或是纵向的一维页面布局</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>父级：display: flex, flex-direction: row, align-items: stretch</td>\\n<td>默认子元素被拉伸与父级同高。</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>子级: flex: 1, flex-grow, flex-shrink, flex-basis</td>\\n<td>增长系数，收缩系数，初始系数</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>父级: align-items: stretch</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>子级: align-self: flex-end</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>Grid</td>\\n<td>网格布局。column 列。row 行。gutter 沟槽 (间隙)。</td>\\n<td>二维布局系统。行列排版。</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>父级: display: grid;</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>grid-template-columns: auto auto auto;</td>\\n<td>三列平分布局</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>grid-template-columns: 1fr 1fr 1fr ;</td>\\n<td>fr 单位代表网格容器中可用空间的一份</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>grid-gap: 10px;</td>\\n<td>网格间隙 10px</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>隐式网格: grid-auto-rows: 100px;</td>\\n<td>所有隐式网格行高100px</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>grid-auto-rows : minmax(100px, auto)</td>\\n<td>minmax 至少100px</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));</td>\\n<td>auto-fill 自动多列填充</td>\\n</tr>\\n<tr>\\n<td>Float</td>\\n<td>浮动布局。</td>\\n<td>文本内图像浮动。</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>float: left;</td>\\n<td>元素浮动文本左边</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>clear: left;</td>\\n<td>文本段落停止左浮动</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td><code>.wrapper::after{ content: \\"\\"; clear: both; display:block; }</code></td>\\n<td>后方插入生成内容，附清除浮动。( clearfix CSS )</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td><code>.wrapper { overflow: auto; }</code></td>\\n<td>盒子停止浮动。( 影响：滚动条或裁剪阴影 )</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>现代方案: display: flow-root;</td>\\n<td>创建块格式化上下文（BFC），盒子就会停止浮动。</td>\\n</tr>\\n<tr>\\n<td>Position</td>\\n<td>定位。静态：static，默认值。</td>\\n<td>正常文档布局流。</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>相对：relative。top, bottom, left, right 移动方位。</td>\\n<td>正常文档布局流。单位：px, mm, rems, %</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>绝对：absolute。top, bottom, left, right 移动方位。</td>\\n<td>不在正常文档布局流中。独立层。例如：弹窗，菜单，翻转面板，拖动元素。</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>z-index : 1; 堆叠顺序，z 轴</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>固定：fixed。top, bottom, left, right 移动方位。</td>\\n<td>绝对定位将元素固定在相对于其位置最近的祖先</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>粘性：sticky。top, bottom, left, right 移动方位。</td>\\n<td>相对固定位置。滚动到阈值后位置固定起来。</td>\\n</tr>\\n<tr>\\n<td>Multi-column</td>\\n<td>多列布局。三列布局：column-count: 3;</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>列宽布局：column-width: 200px;</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>列间间隙：column-gap: 20px;</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>列间样式：column-rule: 4px dotted blue;</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>Table</td>\\n<td>表格布局：</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>父级：display: table;</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>子级：display: table-caption; caption-side: bottom;</td>\\n<td>表格标题位于表格布局底部 ( 头部、左右 )</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>子级：display: table-cell;</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>RWD</td>\\n<td>响应式布局。Responsive Web Design。</td>\\n<td>大小屏幕自适应布局。</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>媒体查询。Media queries。@media all, print, screen, speech, orientation</td>\\n<td>根据设备特征数值调整 CSS</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>@media screen and ( min-width: 800px )</td>\\n<td>媒体查询调配样式</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>@import url;</td>\\n<td>导入样式</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>灵活网络。动态运算出样式值。calc ( )</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>视口单位：vw, vh</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td><code>&lt;meta name=\\"viewport\\" content=\\"width=device-width,initial-scale=1\\"&gt;</code></td>\\n<td>视口宽度设定为设备的宽度</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>专用</td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>div</td>\\n<td>n. 分区</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>section</td>\\n<td>n. 段，部分，章节</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>article</td>\\n<td>文章</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>element</td>\\n<td>元素</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>block-level</td>\\n<td>区块级。例如：<code>&lt;div&gt; &lt;h1&gt; &lt;p&gt; &lt;ul&gt; &lt;table&gt; </code></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>inline-level</td>\\n<td>内联级。例如：<code>&lt;span&gt; &lt;b&gt; &lt;td&gt; &lt;a&gt; &lt;img&gt; </code></td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{t as data};
