const n=JSON.parse('{"key":"v-28ab78ea","path":"/views/Books/Front-end/JustReact/hooks/create.html","title":"","lang":"zh-CN","frontmatter":{"description":"为了更好理解Hooks原理，这一节我们遵循React的运行流程，实现一个不到100行代码的极简useState Hook。建议对照着代码来看本节内容。 工作原理 对于useState Hook，考虑如下例子： function App() { const [num, updateNum] = useState(0); return &lt;p onClick={() =&gt; updateNum(num =&gt; num + 1)}&gt;{num}&lt;/p&gt;; }","head":[["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/Books/Front-end/JustReact/hooks/create.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:description","content":"为了更好理解Hooks原理，这一节我们遵循React的运行流程，实现一个不到100行代码的极简useState Hook。建议对照着代码来看本节内容。 工作原理 对于useState Hook，考虑如下例子： function App() { const [num, updateNum] = useState(0); return &lt;p onClick={() =&gt; updateNum(num =&gt; num + 1)}&gt;{num}&lt;/p&gt;; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"魔法时空宝库"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔法时空宝库\\",\\"url\\":\\"https://mpbug.gitee.io/player/\\"}]}"]]},"headers":[{"level":2,"title":"工作原理","slug":"工作原理","link":"#工作原理","children":[]},{"level":2,"title":"更新是什么","slug":"更新是什么","link":"#更新是什么","children":[]},{"level":2,"title":"update数据结构","slug":"update数据结构","link":"#update数据结构","children":[]},{"level":2,"title":"状态如何保存","slug":"状态如何保存","link":"#状态如何保存","children":[]},{"level":2,"title":"Hook数据结构","slug":"hook数据结构","link":"#hook数据结构","children":[]},{"level":2,"title":"模拟React调度更新流程","slug":"模拟react调度更新流程","link":"#模拟react调度更新流程","children":[]},{"level":2,"title":"计算state","slug":"计算state","link":"#计算state","children":[]},{"level":2,"title":"对触发事件进行抽象","slug":"对触发事件进行抽象","link":"#对触发事件进行抽象","children":[]},{"level":2,"title":"在线Demo","slug":"在线demo","link":"#在线demo","children":[]},{"level":2,"title":"与React的区别","slug":"与react的区别","link":"#与react的区别","children":[]}],"git":{},"readingTime":{"minutes":6.22,"words":1866},"filePathRelative":"views/Books/Front-end/JustReact/hooks/create.md","excerpt":"<p>为了更好理解<code>Hooks</code>原理，这一节我们遵循<code>React</code>的运行流程，实现一个不到100行代码的极简<code>useState Hook</code>。建议对照着代码来看本节内容。</p>\\n<h2> 工作原理</h2>\\n<p>对于<code>useState Hook</code>，考虑如下例子：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">App</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">[</span>num<span class=\\"token punctuation\\">,</span> updateNum<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">useState</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token operator\\">&lt;</span>p onClick<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token function\\">updateNum</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">num</span> <span class=\\"token operator\\">=&gt;</span> num <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">}</span><span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">{</span>num<span class=\\"token punctuation\\">}</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>p<span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
