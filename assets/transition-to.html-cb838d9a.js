const n=JSON.parse('{"key":"v-88fb78b6","path":"/views/Books/Front-end/JustVue2/vue-router/transition-to.html","title":"路径切换","lang":"zh-CN","frontmatter":{"description":"路径切换 history.transitionTo 是 Vue-Router 中非常重要的方法，当我们切换路由线路的时候，就会执行到该方法，前一节我们分析了 matcher 的相关实现，知道它是如何找到匹配的新线路，那么匹配到新线路后又做了哪些事情，接下来我们来完整分析一下 transitionTo 的实现，它的定义在 src/history/base.js 中： transitionTo (location: RawLocation, onComplete?: Function, onAbort?: Function) { const route = this.router.match(location, this.current) this.confirmTransition(route, () =&gt; { this.updateRoute(route) onComplete &amp;&amp; onComplete(route) this.ensureURL() if (!this.ready) { this.ready = true this.readyCbs.forEach(cb =&gt; { cb(route) }) } }, err =&gt; { if (onAbort) { onAbort(err) } if (err &amp;&amp; !this.ready) { this.ready = true this.readyErrorCbs.forEach(cb =&gt; { cb(err) }) } }) }","head":[["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/Books/Front-end/JustVue2/vue-router/transition-to.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:title","content":"路径切换"}],["meta",{"property":"og:description","content":"路径切换 history.transitionTo 是 Vue-Router 中非常重要的方法，当我们切换路由线路的时候，就会执行到该方法，前一节我们分析了 matcher 的相关实现，知道它是如何找到匹配的新线路，那么匹配到新线路后又做了哪些事情，接下来我们来完整分析一下 transitionTo 的实现，它的定义在 src/history/base.js 中： transitionTo (location: RawLocation, onComplete?: Function, onAbort?: Function) { const route = this.router.match(location, this.current) this.confirmTransition(route, () =&gt; { this.updateRoute(route) onComplete &amp;&amp; onComplete(route) this.ensureURL() if (!this.ready) { this.ready = true this.readyCbs.forEach(cb =&gt; { cb(route) }) } }, err =&gt; { if (onAbort) { onAbort(err) } if (err &amp;&amp; !this.ready) { this.ready = true this.readyErrorCbs.forEach(cb =&gt; { cb(err) }) } }) }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"魔法时空宝库"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"路径切换\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔法时空宝库\\",\\"url\\":\\"https://mpbug.gitee.io/player/\\"}]}"]]},"headers":[{"level":2,"title":"导航守卫","slug":"导航守卫","link":"#导航守卫","children":[]},{"level":2,"title":"url","slug":"url","link":"#url","children":[]},{"level":2,"title":"组件","slug":"组件","link":"#组件","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{},"readingTime":{"minutes":19.48,"words":5844},"filePathRelative":"views/Books/Front-end/JustVue2/vue-router/transition-to.md","excerpt":"<h1> 路径切换</h1>\\n<p><code>history.transitionTo</code> 是 Vue-Router 中非常重要的方法，当我们切换路由线路的时候，就会执行到该方法，前一节我们分析了 <code>matcher</code> 的相关实现，知道它是如何找到匹配的新线路，那么匹配到新线路后又做了哪些事情，接下来我们来完整分析一下 <code>transitionTo</code> 的实现，它的定义在 <code>src/history/base.js</code> 中：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token function\\">transitionTo</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\"><span class=\\"token literal-property property\\">location</span><span class=\\"token operator\\">:</span> RawLocation<span class=\\"token punctuation\\">,</span> onComplete<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> Function<span class=\\"token punctuation\\">,</span> onAbort<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> Function</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> route <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>router<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">match</span><span class=\\"token punctuation\\">(</span>location<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>current<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">confirmTransition</span><span class=\\"token punctuation\\">(</span>route<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">updateRoute</span><span class=\\"token punctuation\\">(</span>route<span class=\\"token punctuation\\">)</span>\\n    onComplete <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token function\\">onComplete</span><span class=\\"token punctuation\\">(</span>route<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ensureURL</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>ready<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>ready <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span>\\n      <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>readyCbs<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">cb</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token function\\">cb</span><span class=\\"token punctuation\\">(</span>route<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> <span class=\\"token parameter\\">err</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>onAbort<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token function\\">onAbort</span><span class=\\"token punctuation\\">(</span>err<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>err <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token operator\\">!</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>ready<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>ready <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span>\\n      <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>readyErrorCbs<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">cb</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token function\\">cb</span><span class=\\"token punctuation\\">(</span>err<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
