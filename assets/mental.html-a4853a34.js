const e=JSON.parse('{"key":"v-3aa00dff","path":"/views/Books/Front-end/JustReact/state/mental.html","title":"","lang":"zh-CN","frontmatter":{"description":"在深入源码前，让我们先建立更新机制的心智模型。 在后面两节讲解源码时，我们会将代码与心智模型联系上，方便你更好理解。 同步更新的React 我们可以将更新机制类比代码版本控制。 在没有代码版本控制前，我们在代码中逐步叠加功能。一切看起来井然有序，直到我们遇到了一个紧急线上bug（红色节点）。 为了修复这个bug，我们需要首先将之前的代码提交。 在React中，所有通过ReactDOM.render创建的应用（其他创建应用的方式参考ReactDOM.render一节）都是通过类似的方式更新状态。","head":[["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/Books/Front-end/JustReact/state/mental.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:description","content":"在深入源码前，让我们先建立更新机制的心智模型。 在后面两节讲解源码时，我们会将代码与心智模型联系上，方便你更好理解。 同步更新的React 我们可以将更新机制类比代码版本控制。 在没有代码版本控制前，我们在代码中逐步叠加功能。一切看起来井然有序，直到我们遇到了一个紧急线上bug（红色节点）。 为了修复这个bug，我们需要首先将之前的代码提交。 在React中，所有通过ReactDOM.render创建的应用（其他创建应用的方式参考ReactDOM.render一节）都是通过类似的方式更新状态。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"魔法时空宝库"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔法时空宝库\\",\\"url\\":\\"https://mpbug.gitee.io/player/\\"}]}"]]},"headers":[{"level":2,"title":"同步更新的React","slug":"同步更新的react","link":"#同步更新的react","children":[]},{"level":2,"title":"并发更新的React","slug":"并发更新的react","link":"#并发更新的react","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{},"readingTime":{"minutes":1.55,"words":464},"filePathRelative":"views/Books/Front-end/JustReact/state/mental.md","excerpt":"<p>在深入源码前，让我们先建立<code>更新机制</code>的<code>心智模型</code>。</p>\\n<p>在后面两节讲解源码时，我们会将代码与<code>心智模型</code>联系上，方便你更好理解。</p>\\n<h2> 同步更新的React</h2>\\n<p>我们可以将<code>更新机制</code>类比<code>代码版本控制</code>。</p>\\n<p>在没有<code>代码版本控制</code>前，我们在代码中逐步叠加功能。一切看起来井然有序，直到我们遇到了一个紧急线上bug（红色节点）。</p>\\n\\n<p>为了修复这个bug，我们需要首先将之前的代码提交。</p>\\n<p>在<code>React</code>中，所有通过<code>ReactDOM.render</code>创建的应用（其他创建应用的方式参考<a href=\\"/views/Books/Front-end/JustReact/state/reactdom.html#react%E7%9A%84%E5%85%B6%E4%BB%96%E5%85%A5%E5%8F%A3%E5%87%BD%E6%95%B0\\" target=\\"blank\\">ReactDOM.render一节</a>）都是通过类似的方式<code>更新状态</code>。</p>","autoDesc":true}');export{e as data};
