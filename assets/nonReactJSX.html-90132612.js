import{_ as s,X as a,Y as n,a4 as e}from"./framework-d8252107.js";const t={},c=e(`<h1 id="非-react-jsx" tabindex="-1"><a class="header-anchor" href="#非-react-jsx" aria-hidden="true">#</a> 非 React JSX</h1><p>TypeScript 让你能够以类型安全的方式，在 React 中使用 JSX 之外的其他东西。下面列出了一些可自定义的点，但请注意，这只适用于高级 UI 框架的作者。</p><ul><li>你可以使用 <code>&quot;jsx&quot;:&quot;preserve&quot;</code> 选项来禁用 React 的样式触发。这意味着，JSX 将按原样被触发，然后你可以使用自定义转化器来转化 JSX 部分。</li><li>使用 <code>JSX</code> 全局模块： <ul><li>你可以通过定制 <code>JSX.IntrinsicElements</code> 的接口成员来控制哪些 HTML 标签是可用的，以及如何对其进行类型检查；</li><li>当你在组件中使用时： <ul><li>你可以通过自定义默认的 <code>interface ElementClass extends React.Component&lt;any, any&gt; { }</code> 声明文件来控制哪个 <code>class</code> 必须由组件继承；</li><li>你可以通过自定义 <code>declare module JSX { interface ElementAttributesProperty { props: {} } }</code> 声明文件来控制使用的哪个属性（property）来检查特性（attribute）（默认是 <code>props</code>）。</li></ul></li></ul></li></ul><h2 id="jsxfactory" tabindex="-1"><a class="header-anchor" href="#jsxfactory" aria-hidden="true">#</a> jsxFactory</h2><p>通过 <code>--jsxFactory &lt;JSX factory Name&gt;</code> 与 <code>--jsx react</code>，能让你不同于默认 <code>React</code> 的方式使用 JSX 工厂函数。</p><p>这个新的工厂函数名字习惯被称之为 <code>createElement</code> 函数。</p><h3 id="例子" tabindex="-1"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子</h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> jsxFactory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;jsxFactory&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> div <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Hello JSX!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用编译：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>tsc <span class="token operator">--</span>jsx react <span class="token operator">--</span>reactNamespace jsxFactory <span class="token operator">--</span>m commonJS
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>编译结果：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> jsxFactory_1 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;jsxFactory&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> div <span class="token operator">=</span> jsxFactory_1<span class="token punctuation">.</span>jsxFactory<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&#39;Hello JSX!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jsx-编译提示" tabindex="-1"><a class="header-anchor" href="#jsx-编译提示" aria-hidden="true">#</a> jsx 编译提示</h3><p>你甚至可以使用<code>jsxPragma</code> 为每个文件指定不同的 <code>jsxFactory</code>：</p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token comment">/** @jsx jsxFactory */</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> jsxFactory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;jsxFactory&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> div <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Hello JSX!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 jsx 编译提示中，配合 <code>--jsx react</code> 命令，这个文件将会被触发使用工厂函数：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> jsxFactory_1 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;jsxFactory&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> div <span class="token operator">=</span> jsxFactory_1<span class="token punctuation">.</span>jsxFactory<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&#39;Hello JSX!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),p=[c];function o(l,i){return a(),n("div",null,p)}const d=s(t,[["render",o],["__file","nonReactJSX.html.vue"]]);export{d as default};
