import{_ as n,X as s,Y as a,a4 as t}from"./framework-d8252107.js";const p={},o=t(`<h2 id="颜色格式转换" tabindex="-1"><a class="header-anchor" href="#颜色格式转换" aria-hidden="true">#</a> 颜色格式转换</h2><blockquote><p>这段代码库，帮助你自由转换颜色数值，在不同颜色系统中。支持RGB\\HSV\\CMYK颜色系统。</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RGB</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token comment">/* red */</span><span class="token punctuation">,</span> <span class="token number">20</span> <span class="token comment">/* green */</span><span class="token punctuation">,</span> <span class="token number">30</span> <span class="token comment">/* blue */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSV</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token comment">/* hue */</span><span class="token punctuation">,</span> <span class="token number">20</span> <span class="token comment">/* saturation */</span><span class="token punctuation">,</span> <span class="token number">30</span> <span class="token comment">/* value */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CMYK</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token comment">/* cyan */</span><span class="token punctuation">,</span> <span class="token number">20</span> <span class="token comment">/* magenta */</span><span class="token punctuation">,</span> <span class="token number">30</span> <span class="token comment">/* yellow */</span><span class="token punctuation">,</span> <span class="token number">40</span> <span class="token comment">/* key black */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Usage</span>
<span class="token comment">// To convert from HSV to RGB use library like this:</span>
<span class="token keyword">var</span> result <span class="token operator">=</span> ColorConverter<span class="token punctuation">.</span><span class="token function">toRGB</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HSV</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;RGB:&quot;</span> <span class="token operator">+</span> result<span class="token punctuation">.</span>r <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> result<span class="token punctuation">.</span>g <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> result<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// To convert from RGB to HSV use library like this:</span>
<span class="token keyword">var</span> result <span class="token operator">=</span> ColorConverter<span class="token punctuation">.</span><span class="token function">toHSV</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RGB</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;HSV:&quot;</span> <span class="token operator">+</span> result<span class="token punctuation">.</span>h <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> result<span class="token punctuation">.</span>s <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> result<span class="token punctuation">.</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// definition class</span>
<span class="token keyword">function</span> <span class="token constant">HSV</span><span class="token punctuation">(</span><span class="token parameter">h<span class="token punctuation">,</span> s<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> h <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> s <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> v <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">&gt;</span> <span class="token number">360</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> h <span class="token operator">=</span> <span class="token number">360</span><span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">&gt;</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> s <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">&gt;</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> v <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">}</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>h <span class="token operator">=</span> h<span class="token punctuation">;</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>s <span class="token operator">=</span> s<span class="token punctuation">;</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>v <span class="token operator">=</span> v
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token constant">RGB</span><span class="token punctuation">(</span><span class="token parameter">r<span class="token punctuation">,</span> g<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>r <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>g <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>g <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>b <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">&gt;</span> <span class="token number">255</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>r <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>g <span class="token operator">&gt;</span> <span class="token number">255</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>g <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">&gt;</span> <span class="token number">255</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>b <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">}</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>r <span class="token operator">=</span> r<span class="token punctuation">;</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>g <span class="token operator">=</span> g<span class="token punctuation">;</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>b <span class="token operator">=</span> b
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token constant">CMYK</span><span class="token punctuation">(</span><span class="token parameter">c<span class="token punctuation">,</span> m<span class="token punctuation">,</span> y<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>c <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>c <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">&gt;</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>m <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">&gt;</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>y <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&gt;</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>k <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">}</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>c <span class="token operator">=</span> c<span class="token punctuation">;</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>m <span class="token operator">=</span> m<span class="token punctuation">;</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>k <span class="token operator">=</span> k
<span class="token punctuation">}</span>
<span class="token comment">// definition library</span>
<span class="token keyword">var</span> ColorConverter <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token function-variable function">_RGBtoHSV</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token constant">RGB</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSV</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r <span class="token operator">=</span> <span class="token constant">RGB</span><span class="token punctuation">.</span>r <span class="token operator">/</span> <span class="token number">255</span><span class="token punctuation">;</span>
		g <span class="token operator">=</span> <span class="token constant">RGB</span><span class="token punctuation">.</span>g <span class="token operator">/</span> <span class="token number">255</span><span class="token punctuation">;</span>
		b <span class="token operator">=</span> <span class="token constant">RGB</span><span class="token punctuation">.</span>b <span class="token operator">/</span> <span class="token number">255</span><span class="token punctuation">;</span>
		<span class="token keyword">var</span> minVal <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> g<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">var</span> maxVal <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> g<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">var</span> delta <span class="token operator">=</span> maxVal <span class="token operator">-</span> minVal<span class="token punctuation">;</span>
		result<span class="token punctuation">.</span>v <span class="token operator">=</span> maxVal<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>delta <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			result<span class="token punctuation">.</span>h <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			result<span class="token punctuation">.</span>s <span class="token operator">=</span> <span class="token number">0</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			result<span class="token punctuation">.</span>s <span class="token operator">=</span> delta <span class="token operator">/</span> maxVal<span class="token punctuation">;</span>
			<span class="token keyword">var</span> del_R <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>maxVal <span class="token operator">-</span> r<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>delta <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> delta<span class="token punctuation">;</span>
			<span class="token keyword">var</span> del_G <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>maxVal <span class="token operator">-</span> g<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>delta <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> delta<span class="token punctuation">;</span>
			<span class="token keyword">var</span> del_B <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>maxVal <span class="token operator">-</span> b<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>delta <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> delta<span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">==</span> maxVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				result<span class="token punctuation">.</span>h <span class="token operator">=</span> del_B <span class="token operator">-</span> del_G
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>g <span class="token operator">==</span> maxVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				result<span class="token punctuation">.</span>h <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> del_R <span class="token operator">-</span> del_B
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">==</span> maxVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				result<span class="token punctuation">.</span>h <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> del_G <span class="token operator">-</span> del_R
			<span class="token punctuation">}</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>h <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				result<span class="token punctuation">.</span>h <span class="token operator">+=</span> <span class="token number">1</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>h <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				result<span class="token punctuation">.</span>h <span class="token operator">-=</span> <span class="token number">1</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		result<span class="token punctuation">.</span>h <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>h <span class="token operator">*</span> <span class="token number">360</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		result<span class="token punctuation">.</span>s <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>s <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		result<span class="token punctuation">.</span>v <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>v <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> result
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token function-variable function">_HSVtoRGB</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token constant">HSV</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RGB</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">var</span> h <span class="token operator">=</span> <span class="token constant">HSV</span><span class="token punctuation">.</span>h <span class="token operator">/</span> <span class="token number">360</span><span class="token punctuation">;</span>
		<span class="token keyword">var</span> s <span class="token operator">=</span> <span class="token constant">HSV</span><span class="token punctuation">.</span>s <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>
		<span class="token keyword">var</span> v <span class="token operator">=</span> <span class="token constant">HSV</span><span class="token punctuation">.</span>v <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			result<span class="token punctuation">.</span>r <span class="token operator">=</span> v <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">;</span>
			result<span class="token punctuation">.</span>g <span class="token operator">=</span> v <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">;</span>
			result<span class="token punctuation">.</span>v <span class="token operator">=</span> v <span class="token operator">*</span> <span class="token number">255</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			var_h <span class="token operator">=</span> h <span class="token operator">*</span> <span class="token number">6</span><span class="token punctuation">;</span>
			var_i <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>var_h<span class="token punctuation">)</span><span class="token punctuation">;</span>
			var_1 <span class="token operator">=</span> v <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
			var_2 <span class="token operator">=</span> v <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> s <span class="token operator">*</span> <span class="token punctuation">(</span>var_h <span class="token operator">-</span> var_i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			var_3 <span class="token operator">=</span> v <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> s <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token punctuation">(</span>var_h <span class="token operator">-</span> var_i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>var_i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				var_r <span class="token operator">=</span> v<span class="token punctuation">;</span>
				var_g <span class="token operator">=</span> var_3<span class="token punctuation">;</span>
				var_b <span class="token operator">=</span> var_1
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var_i <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				var_r <span class="token operator">=</span> var_2<span class="token punctuation">;</span>
				var_g <span class="token operator">=</span> v<span class="token punctuation">;</span>
				var_b <span class="token operator">=</span> var_1
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var_i <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				var_r <span class="token operator">=</span> var_1<span class="token punctuation">;</span>
				var_g <span class="token operator">=</span> v<span class="token punctuation">;</span>
				var_b <span class="token operator">=</span> var_3
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var_i <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				var_r <span class="token operator">=</span> var_1<span class="token punctuation">;</span>
				var_g <span class="token operator">=</span> var_2<span class="token punctuation">;</span>
				var_b <span class="token operator">=</span> v
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var_i <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				var_r <span class="token operator">=</span> var_3<span class="token punctuation">;</span>
				var_g <span class="token operator">=</span> var_1<span class="token punctuation">;</span>
				var_b <span class="token operator">=</span> v
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				var_r <span class="token operator">=</span> v<span class="token punctuation">;</span>
				var_g <span class="token operator">=</span> var_1<span class="token punctuation">;</span>
				var_b <span class="token operator">=</span> var_2
			<span class="token punctuation">}</span><span class="token punctuation">;</span>
			result<span class="token punctuation">.</span>r <span class="token operator">=</span> var_r <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">;</span>
			result<span class="token punctuation">.</span>g <span class="token operator">=</span> var_g <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">;</span>
			result<span class="token punctuation">.</span>b <span class="token operator">=</span> var_b <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">;</span>
			result<span class="token punctuation">.</span>r <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
			result<span class="token punctuation">.</span>g <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>
			result<span class="token punctuation">.</span>b <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>b<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> result
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token function-variable function">_CMYKtoRGB</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token constant">CMYK</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RGB</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		c <span class="token operator">=</span> <span class="token constant">CMYK</span><span class="token punctuation">.</span>c <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>
		m <span class="token operator">=</span> <span class="token constant">CMYK</span><span class="token punctuation">.</span>m <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>
		y <span class="token operator">=</span> <span class="token constant">CMYK</span><span class="token punctuation">.</span>y <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>
		k <span class="token operator">=</span> <span class="token constant">CMYK</span><span class="token punctuation">.</span>k <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>
		result<span class="token punctuation">.</span>r <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> c <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> k<span class="token punctuation">)</span> <span class="token operator">+</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
		result<span class="token punctuation">.</span>g <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> m <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> k<span class="token punctuation">)</span> <span class="token operator">+</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
		result<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> y <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> k<span class="token punctuation">)</span> <span class="token operator">+</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
		result<span class="token punctuation">.</span>r <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>r <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		result<span class="token punctuation">.</span>g <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>g <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		result<span class="token punctuation">.</span>b <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>b <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> result
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token function-variable function">_RGBtoCMYK</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token constant">RGB</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CMYK</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r <span class="token operator">=</span> <span class="token constant">RGB</span><span class="token punctuation">.</span>r <span class="token operator">/</span> <span class="token number">255</span><span class="token punctuation">;</span>
		g <span class="token operator">=</span> <span class="token constant">RGB</span><span class="token punctuation">.</span>g <span class="token operator">/</span> <span class="token number">255</span><span class="token punctuation">;</span>
		b <span class="token operator">=</span> <span class="token constant">RGB</span><span class="token punctuation">.</span>b <span class="token operator">/</span> <span class="token number">255</span><span class="token punctuation">;</span>
		result<span class="token punctuation">.</span>k <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> r<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">-</span> g<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
		result<span class="token punctuation">.</span>c <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> r <span class="token operator">-</span> result<span class="token punctuation">.</span>k<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> result<span class="token punctuation">.</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>
		result<span class="token punctuation">.</span>m <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> g <span class="token operator">-</span> result<span class="token punctuation">.</span>k<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> result<span class="token punctuation">.</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>
		result<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> b <span class="token operator">-</span> result<span class="token punctuation">.</span>k<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> result<span class="token punctuation">.</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>
		result<span class="token punctuation">.</span>c <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>c <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		result<span class="token punctuation">.</span>m <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>m <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		result<span class="token punctuation">.</span>y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>y <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		result<span class="token punctuation">.</span>k <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>k <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> result
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token function-variable function">toRGB</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">RGB</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> o<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">HSV</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_HSVtoRGB</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">CMYK</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_CMYKtoRGB</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token function-variable function">toHSV</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">HSV</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> o<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">RGB</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_RGBtoHSV</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">CMYK</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_RGBtoHSV</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_CMYKtoRGB</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token function-variable function">toCMYK</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">CMYK</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> o<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">RGB</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_RGBtoCMYK</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">HSV</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_RGBtoCMYK</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_HSVtoRGB</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),e=[o];function c(l,u){return s(),a("div",null,e)}const i=n(p,[["render",c],["__file","Color.html.vue"]]);export{i as default};
