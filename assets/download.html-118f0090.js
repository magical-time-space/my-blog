const n=JSON.parse(`{"key":"v-0ceecb1e","path":"/views/DevLog/Web/javascript/Snippet/download.html","title":"download","lang":"zh-CN","frontmatter":{"title":"download","icon":"page","order":1,"author":"admin","date":"2023-05-05T00:00:00.000Z","description":"文本下载 // download 文本信息文件下载 export async function downloadRes(url, name, onprogress = null, onDone = null, onError = null) { let response = null try { response = await fetch(url) } catch (error) { onError &amp;&amp; onError() return; } // 下载中 const reader = response.body.getReader(); // Step 2: get total length const contentLength = +response.headers.get('Content-Length'); const contentLengthUint = toStringUint(contentLength, 0) // Step 3: read the data let receivedLength = 0; // received that many bytes at the moment let chunks = []; // array of received binary chunks (comprises the body) let percentage = 0.0 // eslint-disable-next-line no-constant-condition while (true) { const { done, value } = await reader.read(); if (done) { break; } chunks.push(value); receivedLength += value.length; const receivedLengthUnit = toStringUint(receivedLength, 0) // console.log(\`Received \${receivedLengthUnit} of \${contentLengthUint}\`) percentage = (((receivedLength) * 100) / contentLength).toFixed(0) + '%'; onprogress &amp;&amp; onprogress({ receivedLengthUnit, contentLengthUint, percentage }) } // let blob = new Blob(chunks); // 内容转变成blob地址 // let blob = await response.blob() // 创建隐藏的可下载链接 let objectUrl = window.URL.createObjectURL(blob) let a = document.createElement('a') //地址 a.href = objectUrl //修改文件名 a.download = name // 触发点击 document.body.appendChild(a) a.click() //移除 setTimeout(() =&gt; { a.remove(); onDone &amp;&amp; onDone() }, 500) }","head":[["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/DevLog/Web/javascript/Snippet/download.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:title","content":"download"}],["meta",{"property":"og:description","content":"文本下载 // download 文本信息文件下载 export async function downloadRes(url, name, onprogress = null, onDone = null, onError = null) { let response = null try { response = await fetch(url) } catch (error) { onError &amp;&amp; onError() return; } // 下载中 const reader = response.body.getReader(); // Step 2: get total length const contentLength = +response.headers.get('Content-Length'); const contentLengthUint = toStringUint(contentLength, 0) // Step 3: read the data let receivedLength = 0; // received that many bytes at the moment let chunks = []; // array of received binary chunks (comprises the body) let percentage = 0.0 // eslint-disable-next-line no-constant-condition while (true) { const { done, value } = await reader.read(); if (done) { break; } chunks.push(value); receivedLength += value.length; const receivedLengthUnit = toStringUint(receivedLength, 0) // console.log(\`Received \${receivedLengthUnit} of \${contentLengthUint}\`) percentage = (((receivedLength) * 100) / contentLength).toFixed(0) + '%'; onprogress &amp;&amp; onprogress({ receivedLengthUnit, contentLengthUint, percentage }) } // let blob = new Blob(chunks); // 内容转变成blob地址 // let blob = await response.blob() // 创建隐藏的可下载链接 let objectUrl = window.URL.createObjectURL(blob) let a = document.createElement('a') //地址 a.href = objectUrl //修改文件名 a.download = name // 触发点击 document.body.appendChild(a) a.click() //移除 setTimeout(() =&gt; { a.remove(); onDone &amp;&amp; onDone() }, 500) }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"admin"}],["meta",{"property":"article:published_time","content":"2023-05-05T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"download\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-05T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"admin\\"}]}"]]},"headers":[{"level":3,"title":"文本下载","slug":"文本下载","link":"#文本下载","children":[]}],"git":{},"readingTime":{"minutes":1.14,"words":343},"filePathRelative":"views/DevLog/Web/javascript/Snippet/download.md","localizedDate":"2023年5月5日","excerpt":"<h3> 文本下载</h3>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// download 文本信息文件下载</span>\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">async</span> <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">downloadRes</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">url<span class=\\"token punctuation\\">,</span> name<span class=\\"token punctuation\\">,</span> onprogress <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">,</span> onDone <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">,</span> onError <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">null</span></span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">let</span> response <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">null</span>\\n    <span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span>\\n        response <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> <span class=\\"token function\\">fetch</span><span class=\\"token punctuation\\">(</span>url<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span>error<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        onError <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token function\\">onError</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token comment\\">// 下载中</span>\\n    <span class=\\"token keyword\\">const</span> reader <span class=\\"token operator\\">=</span> response<span class=\\"token punctuation\\">.</span>body<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getReader</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// Step 2: get total length</span>\\n    <span class=\\"token keyword\\">const</span> contentLength <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">+</span>response<span class=\\"token punctuation\\">.</span>headers<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Content-Length'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">const</span> contentLengthUint <span class=\\"token operator\\">=</span> <span class=\\"token function\\">toStringUint</span><span class=\\"token punctuation\\">(</span>contentLength<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token comment\\">// Step 3: read the data</span>\\n    <span class=\\"token keyword\\">let</span> receivedLength <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// received that many bytes at the moment</span>\\n    <span class=\\"token keyword\\">let</span> chunks <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// array of received binary chunks (comprises the body)</span>\\n    <span class=\\"token keyword\\">let</span> percentage <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0.0</span>\\n    <span class=\\"token comment\\">// eslint-disable-next-line no-constant-condition</span>\\n    <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span><span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span> done<span class=\\"token punctuation\\">,</span> value <span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> reader<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">read</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>done<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">break</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        chunks<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        receivedLength <span class=\\"token operator\\">+=</span> value<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">const</span> receivedLengthUnit <span class=\\"token operator\\">=</span> <span class=\\"token function\\">toStringUint</span><span class=\\"token punctuation\\">(</span>receivedLength<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token comment\\">// console.log(\`Received \${receivedLengthUnit} of \${contentLengthUint}\`)</span>\\n        percentage <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>receivedLength<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">100</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> contentLength<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toFixed</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token string\\">'%'</span><span class=\\"token punctuation\\">;</span>\\n        onprogress <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token function\\">onprogress</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span> receivedLengthUnit<span class=\\"token punctuation\\">,</span> contentLengthUint<span class=\\"token punctuation\\">,</span> percentage <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token comment\\">//</span>\\n    <span class=\\"token keyword\\">let</span> blob <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Blob</span><span class=\\"token punctuation\\">(</span>chunks<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 内容转变成blob地址</span>\\n    <span class=\\"token comment\\">// let blob = await response.blob()</span>\\n    <span class=\\"token comment\\">// 创建隐藏的可下载链接</span>\\n    <span class=\\"token keyword\\">let</span> objectUrl <span class=\\"token operator\\">=</span> window<span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">URL</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createObjectURL</span><span class=\\"token punctuation\\">(</span>blob<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">let</span> a <span class=\\"token operator\\">=</span> document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createElement</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'a'</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token comment\\">//地址</span>\\n    a<span class=\\"token punctuation\\">.</span>href <span class=\\"token operator\\">=</span> objectUrl\\n    <span class=\\"token comment\\">//修改文件名</span>\\n    a<span class=\\"token punctuation\\">.</span>download <span class=\\"token operator\\">=</span> name\\n    <span class=\\"token comment\\">// 触发点击</span>\\n    document<span class=\\"token punctuation\\">.</span>body<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">appendChild</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span>\\n    a<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">click</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token comment\\">//移除</span>\\n    <span class=\\"token function\\">setTimeout</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n        a<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">remove</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        onDone <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token function\\">onDone</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">500</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
