const n=JSON.parse('{"key":"v-9fd3d9d4","path":"/views/DevLog/Web/javascript/Snippet/parseToJson.html","title":"parseToJson","lang":"zh-CN","frontmatter":{"title":"parseToJson","icon":"page","order":1,"author":"admin","date":"2023-05-05T00:00:00.000Z","description":"JSON字符串转换成JSON对象，自动修正错误字符增强版 function parseToJSON(str) { let content = `${str}`, obj = {}, retry = 3; while (retry--) { try { obj = JSON.parse(content); break; } catch (error) { let num = error.message.match(/\\\\d+/gi); let index = ~~(num); num &amp;&amp; (content = content.slice(0, index - 1) + content.slice(index)); } } return obj; }","head":[["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/DevLog/Web/javascript/Snippet/parseToJson.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:title","content":"parseToJson"}],["meta",{"property":"og:description","content":"JSON字符串转换成JSON对象，自动修正错误字符增强版 function parseToJSON(str) { let content = `${str}`, obj = {}, retry = 3; while (retry--) { try { obj = JSON.parse(content); break; } catch (error) { let num = error.message.match(/\\\\d+/gi); let index = ~~(num); num &amp;&amp; (content = content.slice(0, index - 1) + content.slice(index)); } } return obj; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"admin"}],["meta",{"property":"article:published_time","content":"2023-05-05T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"parseToJson\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-05T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"admin\\"}]}"]]},"headers":[{"level":3,"title":"JSON字符串转换成JSON对象，自动修正错误字符增强版","slug":"json字符串转换成json对象-自动修正错误字符增强版","link":"#json字符串转换成json对象-自动修正错误字符增强版","children":[]}],"git":{},"readingTime":{"minutes":0.65,"words":195},"filePathRelative":"views/DevLog/Web/javascript/Snippet/parseToJson.md","localizedDate":"2023年5月5日","excerpt":"<h3> JSON字符串转换成JSON对象，自动修正错误字符增强版</h3>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">parseToJSON</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">str</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">let</span> content <span class=\\"token operator\\">=</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">`</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>str<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token template-punctuation string\\">`</span></span><span class=\\"token punctuation\\">,</span> obj <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> retry <span class=\\"token operator\\">=</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>retry<span class=\\"token operator\\">--</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span> obj <span class=\\"token operator\\">=</span> <span class=\\"token constant\\">JSON</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">parse</span><span class=\\"token punctuation\\">(</span>content<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token keyword\\">break</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span>error<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">let</span> num <span class=\\"token operator\\">=</span> error<span class=\\"token punctuation\\">.</span>message<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">match</span><span class=\\"token punctuation\\">(</span><span class=\\"token regex\\"><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-source language-regex\\">\\\\d+</span><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-flags\\">gi</span></span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">let</span> index <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">~</span><span class=\\"token operator\\">~</span><span class=\\"token punctuation\\">(</span>num<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            num <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token punctuation\\">(</span>content <span class=\\"token operator\\">=</span> content<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">slice</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> index <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> content<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">slice</span><span class=\\"token punctuation\\">(</span>index<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> obj<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
