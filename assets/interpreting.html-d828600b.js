const n=JSON.parse(`{"key":"v-c7d676a8","path":"/views/Books/Front-end/TypescriptMaster/error/interpreting.html","title":"解读 Errors","lang":"zh-CN","frontmatter":{"description":"解读 Errors TypeScript 是一种专注于帮助开发人员的编程语言，当错误出现时，它会提供尽可能提供非常有用的错误信息。这对于那些信任使用者的编译器来说，可能会导致轻微的信息量过载，而不会那么实用。 让我们来看一个在 IDE 中的例子： type SomethingComplex = { foo: number; bar: string; }; function takeSomethingComplex(arg: SomethingComplex) {} function getBar(): string { return 'some bar'; } // 一个可能会出现的错误使用 const fail = { foo: 123, bar: getBar }; takeSomethingComplex(fail); // 在这里 TypeScript 会报错","head":[["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/Books/Front-end/TypescriptMaster/error/interpreting.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:title","content":"解读 Errors"}],["meta",{"property":"og:description","content":"解读 Errors TypeScript 是一种专注于帮助开发人员的编程语言，当错误出现时，它会提供尽可能提供非常有用的错误信息。这对于那些信任使用者的编译器来说，可能会导致轻微的信息量过载，而不会那么实用。 让我们来看一个在 IDE 中的例子： type SomethingComplex = { foo: number; bar: string; }; function takeSomethingComplex(arg: SomethingComplex) {} function getBar(): string { return 'some bar'; } // 一个可能会出现的错误使用 const fail = { foo: 123, bar: getBar }; takeSomethingComplex(fail); // 在这里 TypeScript 会报错"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"魔法时空宝库"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"解读 Errors\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔法时空宝库\\",\\"url\\":\\"https://mpbug.gitee.io/player/\\"}]}"]]},"headers":[{"level":2,"title":"错误分类","slug":"错误分类","link":"#错误分类","children":[{"level":3,"title":"简洁","slug":"简洁","link":"#简洁","children":[]}]},{"level":2,"title":"详细","slug":"详细","link":"#详细","children":[]},{"level":2,"title":"在 IDE 中怎么提示","slug":"在-ide-中怎么提示","link":"#在-ide-中怎么提示","children":[]}],"git":{},"readingTime":{"minutes":2.13,"words":640},"filePathRelative":"views/Books/Front-end/TypescriptMaster/error/interpreting.md","excerpt":"<h1> 解读 Errors</h1>\\n<p>TypeScript 是一种专注于帮助开发人员的编程语言，当错误出现时，它会提供尽可能提供非常有用的错误信息。这对于那些信任使用者的编译器来说，可能会导致轻微的信息量过载，而不会那么实用。</p>\\n<p>让我们来看一个在 IDE 中的例子：</p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">type</span> <span class=\\"token class-name\\">SomethingComplex</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n  foo<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">;</span>\\n  bar<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">takeSomethingComplex</span><span class=\\"token punctuation\\">(</span>arg<span class=\\"token operator\\">:</span> SomethingComplex<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">getBar</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token string\\">'some bar'</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 一个可能会出现的错误使用</span>\\n<span class=\\"token keyword\\">const</span> fail <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n  foo<span class=\\"token operator\\">:</span> <span class=\\"token number\\">123</span><span class=\\"token punctuation\\">,</span>\\n  bar<span class=\\"token operator\\">:</span> getBar\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token function\\">takeSomethingComplex</span><span class=\\"token punctuation\\">(</span>fail<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 在这里 TypeScript 会报错</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
