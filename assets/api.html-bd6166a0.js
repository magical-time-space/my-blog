const e=JSON.parse('{"key":"v-cf415ac8","path":"/views/Books/Front-end/JustVue2/vuex/api.html","title":"API","lang":"zh-CN","frontmatter":{"description":"API 上一节我们对 Vuex 的初始化过程有了深入的分析，在我们构造好这个 store 后，需要提供一些 API 对这个 store 做存取的操作，那么这一节我们就从源码的角度对这些 API 做分析。 数据获取 Vuex 最终存储的数据是在 state 上的，我们之前分析过在 store.state 存储的是 root state，那么对于模块上的 state，假设我们有 2 个嵌套的 modules，它们的 key 分别为 a 和 b，我们可以通过 store.state.a.b.xxx 的方式去获取。它的实现是在发生在 installModule 的时候：","head":[["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/Books/Front-end/JustVue2/vuex/api.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:title","content":"API"}],["meta",{"property":"og:description","content":"API 上一节我们对 Vuex 的初始化过程有了深入的分析，在我们构造好这个 store 后，需要提供一些 API 对这个 store 做存取的操作，那么这一节我们就从源码的角度对这些 API 做分析。 数据获取 Vuex 最终存储的数据是在 state 上的，我们之前分析过在 store.state 存储的是 root state，那么对于模块上的 state，假设我们有 2 个嵌套的 modules，它们的 key 分别为 a 和 b，我们可以通过 store.state.a.b.xxx 的方式去获取。它的实现是在发生在 installModule 的时候："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"魔法时空宝库"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"API\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔法时空宝库\\",\\"url\\":\\"https://mpbug.gitee.io/player/\\"}]}"]]},"headers":[{"level":2,"title":"数据获取","slug":"数据获取","link":"#数据获取","children":[]},{"level":2,"title":"数据存储","slug":"数据存储","link":"#数据存储","children":[]},{"level":2,"title":"语法糖","slug":"语法糖","link":"#语法糖","children":[{"level":3,"title":"mapState","slug":"mapstate","link":"#mapstate","children":[]},{"level":3,"title":"mapGetters","slug":"mapgetters","link":"#mapgetters","children":[]},{"level":3,"title":"mapMutations","slug":"mapmutations","link":"#mapmutations","children":[]},{"level":3,"title":"mapActions","slug":"mapactions","link":"#mapactions","children":[]}]},{"level":2,"title":"动态更新模块","slug":"动态更新模块","link":"#动态更新模块","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{},"readingTime":{"minutes":11.8,"words":3541},"filePathRelative":"views/Books/Front-end/JustVue2/vuex/api.md","excerpt":"<h1> API</h1>\\n<p>上一节我们对 Vuex 的初始化过程有了深入的分析，在我们构造好这个 <code>store</code> 后，需要提供一些 API 对这个 <code>store</code> 做存取的操作，那么这一节我们就从源码的角度对这些 API 做分析。</p>\\n<h2> 数据获取</h2>\\n<p>Vuex 最终存储的数据是在 <code>state</code> 上的，我们之前分析过在 <code>store.state</code> 存储的是 <code>root state</code>，那么对于模块上的 <code>state</code>，假设我们有 2 个嵌套的 <code>modules</code>，它们的 <code>key</code> 分别为 <code>a</code> 和 <code>b</code>，我们可以通过 <code>store.state.a.b.xxx</code> 的方式去获取。它的实现是在发生在 <code>installModule</code> 的时候：</p>","autoDesc":true}');export{e as data};
