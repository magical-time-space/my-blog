const n=JSON.parse(`{"key":"v-52ed90d0","path":"/views/Books/Front-end/TypescriptMaster/typings/indexSignatures.html","title":"索引签名","lang":"zh-CN","frontmatter":{"description":"索引签名 可以用字符串访问 JavaScript 中的对象（TypeScript 中也一样），用来保存对其他对象的引用。 例如： let foo: any = {}; foo['Hello'] = 'World'; console.log(foo['Hello']); // World","head":[["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/Books/Front-end/TypescriptMaster/typings/indexSignatures.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:title","content":"索引签名"}],["meta",{"property":"og:description","content":"索引签名 可以用字符串访问 JavaScript 中的对象（TypeScript 中也一样），用来保存对其他对象的引用。 例如： let foo: any = {}; foo['Hello'] = 'World'; console.log(foo['Hello']); // World"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"魔法时空宝库"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"索引签名\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔法时空宝库\\",\\"url\\":\\"https://mpbug.gitee.io/player/\\"}]}"]]},"headers":[{"level":2,"title":"TypeScript 索引签名","slug":"typescript-索引签名","link":"#typescript-索引签名","children":[]},{"level":2,"title":"声明一个索引签名","slug":"声明一个索引签名","link":"#声明一个索引签名","children":[]},{"level":2,"title":"所有成员都必须符合字符串的索引签名","slug":"所有成员都必须符合字符串的索引签名","link":"#所有成员都必须符合字符串的索引签名","children":[]},{"level":2,"title":"使用一组有限的字符串字面量","slug":"使用一组有限的字符串字面量","link":"#使用一组有限的字符串字面量","children":[]},{"level":2,"title":"同时拥有 string 和 number 类型的索引签名","slug":"同时拥有-string-和-number-类型的索引签名","link":"#同时拥有-string-和-number-类型的索引签名","children":[]},{"level":2,"title":"设计模式：索引签名的嵌套","slug":"设计模式-索引签名的嵌套","link":"#设计模式-索引签名的嵌套","children":[]},{"level":2,"title":"索引签名中排除某些属性","slug":"索引签名中排除某些属性","link":"#索引签名中排除某些属性","children":[]}],"git":{},"readingTime":{"minutes":5.7,"words":1709},"filePathRelative":"views/Books/Front-end/TypescriptMaster/typings/indexSignatures.md","excerpt":"<h1> 索引签名</h1>\\n<p>可以用字符串访问 JavaScript 中的对象（TypeScript 中也一样），用来保存对其他对象的引用。</p>\\n<p>例如：</p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">let</span> foo<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\nfoo<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'Hello'</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'World'</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>foo<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'Hello'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// World</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
