const e=JSON.parse(`{"key":"v-1d862247","path":"/views/Books/Front-end/TypescriptMaster/typings/typeCompatibility.html","title":"类型兼容性","lang":"zh-CN","frontmatter":{"description":"类型兼容性 类型兼容性用于确定一个类型是否能赋值给其他类型。 如 string 类型与 number 类型不兼容： let str: string = 'Hello'; let num: number = 123; str = num; // Error: 'number' 不能赋值给 'string' num = str; // Error: 'string' 不能赋值给 'number'","head":[["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/Books/Front-end/TypescriptMaster/typings/typeCompatibility.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:title","content":"类型兼容性"}],["meta",{"property":"og:description","content":"类型兼容性 类型兼容性用于确定一个类型是否能赋值给其他类型。 如 string 类型与 number 类型不兼容： let str: string = 'Hello'; let num: number = 123; str = num; // Error: 'number' 不能赋值给 'string' num = str; // Error: 'string' 不能赋值给 'number'"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"魔法时空宝库"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类型兼容性\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔法时空宝库\\",\\"url\\":\\"https://mpbug.gitee.io/player/\\"}]}"]]},"headers":[{"level":2,"title":"安全性","slug":"安全性","link":"#安全性","children":[]},{"level":2,"title":"结构化","slug":"结构化","link":"#结构化","children":[]},{"level":2,"title":"变体","slug":"变体","link":"#变体","children":[]},{"level":2,"title":"函数","slug":"函数","link":"#函数","children":[{"level":3,"title":"返回类型","slug":"返回类型","link":"#返回类型","children":[]},{"level":3,"title":"参数数量","slug":"参数数量","link":"#参数数量","children":[]},{"level":3,"title":"可选的和 rest 参数","slug":"可选的和-rest-参数","link":"#可选的和-rest-参数","children":[]},{"level":3,"title":"函数参数类型","slug":"函数参数类型","link":"#函数参数类型","children":[]}]},{"level":2,"title":"枚举","slug":"枚举","link":"#枚举","children":[]},{"level":2,"title":"类","slug":"类","link":"#类","children":[]},{"level":2,"title":"泛型","slug":"泛型","link":"#泛型","children":[]},{"level":2,"title":"脚注：不变性（Invariance）","slug":"脚注-不变性-invariance","link":"#脚注-不变性-invariance","children":[]}],"git":{},"readingTime":{"minutes":5.95,"words":1785},"filePathRelative":"views/Books/Front-end/TypescriptMaster/typings/typeCompatibility.md","excerpt":"<h1> 类型兼容性</h1>\\n<p>类型兼容性用于确定一个类型是否能赋值给其他类型。</p>\\n<p>如 <code>string</code> 类型与 <code>number</code> 类型不兼容：</p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">let</span> str<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'Hello'</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">let</span> num<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">123</span><span class=\\"token punctuation\\">;</span>\\n\\nstr <span class=\\"token operator\\">=</span> num<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// Error: 'number' 不能赋值给 'string'</span>\\nnum <span class=\\"token operator\\">=</span> str<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// Error: 'string' 不能赋值给 'number'</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
