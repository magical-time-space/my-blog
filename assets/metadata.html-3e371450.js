const e=JSON.parse('{"key":"v-18815064","path":"/views/Books/Front-end/TypescriptMaster/tips/metadata.html","title":"Reflect Metadata","lang":"zh-CN","frontmatter":{"description":"Reflect Metadata 基础 Reflect Metadata 是 ES7 的一个提案，它主要用来在声明的时候添加和读取元数据。TypeScript 在 1.5+ 的版本已经支持它，你只需要： npm i reflect-metadata --save。 在 tsconfig.json 里配置 emitDecoratorMetadata 选项。 Reflect Metadata 的 API 可以用于类或者类的属性上，如：","head":[["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/Books/Front-end/TypescriptMaster/tips/metadata.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:title","content":"Reflect Metadata"}],["meta",{"property":"og:description","content":"Reflect Metadata 基础 Reflect Metadata 是 ES7 的一个提案，它主要用来在声明的时候添加和读取元数据。TypeScript 在 1.5+ 的版本已经支持它，你只需要： npm i reflect-metadata --save。 在 tsconfig.json 里配置 emitDecoratorMetadata 选项。 Reflect Metadata 的 API 可以用于类或者类的属性上，如："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"魔法时空宝库"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Reflect Metadata\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔法时空宝库\\",\\"url\\":\\"https://mpbug.gitee.io/player/\\"}]}"]]},"headers":[{"level":2,"title":"基础","slug":"基础","link":"#基础","children":[]},{"level":2,"title":"获取类型信息","slug":"获取类型信息","link":"#获取类型信息","children":[]},{"level":2,"title":"自定义 metadataKey","slug":"自定义-metadatakey","link":"#自定义-metadatakey","children":[]},{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[{"level":3,"title":"控制反转和依赖注入","slug":"控制反转和依赖注入","link":"#控制反转和依赖注入","children":[]},{"level":3,"title":"Controller 与 Get 的实现","slug":"controller-与-get-的实现","link":"#controller-与-get-的实现","children":[]}]}],"git":{},"readingTime":{"minutes":2.58,"words":775},"filePathRelative":"views/Books/Front-end/TypescriptMaster/tips/metadata.md","excerpt":"<h1> Reflect Metadata</h1>\\n<h2> 基础</h2>\\n<p>Reflect Metadata 是 ES7 的一个提案，它主要用来在声明的时候添加和读取元数据。TypeScript 在 1.5+ 的版本已经支持它，你只需要：</p>\\n<ul>\\n<li><code>npm i reflect-metadata --save</code>。</li>\\n<li>在 <code>tsconfig.json</code> 里配置 <code>emitDecoratorMetadata</code> 选项。</li>\\n</ul>\\n<p>Reflect Metadata 的 API 可以用于类或者类的属性上，如：</p>","autoDesc":true}');export{e as data};
