const e=JSON.parse('{"key":"v-f2898232","path":"/views/Books/Front-end/JustVue2/reactive/computed-watcher.html","title":"计算属性 VS 侦听属性","lang":"zh-CN","frontmatter":{"description":"计算属性 VS 侦听属性 Vue 的组件对象支持了计算属性 computed 和侦听属性 watch 2 个选项，很多同学不了解什么时候该用 computed 什么时候该用 watch。先不回答这个问题，我们接下来从源码实现的角度来分析它们两者有什么区别。 computed 计算属性的初始化是发生在 Vue 实例初始化阶段的 initState 函数中，执行了 if (opts.computed) initComputed(vm, opts.computed)，initComputed 的定义在 src/core/instance/state.js 中：","head":[["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/Books/Front-end/JustVue2/reactive/computed-watcher.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:title","content":"计算属性 VS 侦听属性"}],["meta",{"property":"og:description","content":"计算属性 VS 侦听属性 Vue 的组件对象支持了计算属性 computed 和侦听属性 watch 2 个选项，很多同学不了解什么时候该用 computed 什么时候该用 watch。先不回答这个问题，我们接下来从源码实现的角度来分析它们两者有什么区别。 computed 计算属性的初始化是发生在 Vue 实例初始化阶段的 initState 函数中，执行了 if (opts.computed) initComputed(vm, opts.computed)，initComputed 的定义在 src/core/instance/state.js 中："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"魔法时空宝库"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"计算属性 VS 侦听属性\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"魔法时空宝库\\",\\"url\\":\\"https://mpbug.gitee.io/player/\\"}]}"]]},"headers":[{"level":2,"title":"computed","slug":"computed","link":"#computed","children":[]},{"level":2,"title":"watch","slug":"watch","link":"#watch","children":[]},{"level":2,"title":"Watcher options","slug":"watcher-options","link":"#watcher-options","children":[{"level":3,"title":"deep watcher","slug":"deep-watcher","link":"#deep-watcher","children":[]},{"level":3,"title":"user watcher","slug":"user-watcher","link":"#user-watcher","children":[]},{"level":3,"title":"computed watcher","slug":"computed-watcher","link":"#computed-watcher","children":[]},{"level":3,"title":"sync watcher","slug":"sync-watcher","link":"#sync-watcher","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{},"readingTime":{"minutes":11.58,"words":3475},"filePathRelative":"views/Books/Front-end/JustVue2/reactive/computed-watcher.md","excerpt":"<h1> 计算属性 VS 侦听属性</h1>\\n<p>Vue 的组件对象支持了计算属性 <code>computed</code> 和侦听属性 <code>watch</code> 2 个选项，很多同学不了解什么时候该用 <code>computed</code> 什么时候该用 <code>watch</code>。先不回答这个问题，我们接下来从源码实现的角度来分析它们两者有什么区别。</p>\\n<h2> <code>computed</code></h2>\\n<p>计算属性的初始化是发生在 Vue 实例初始化阶段的 <code>initState</code> 函数中，执行了 <code>if (opts.computed) initComputed(vm, opts.computed)</code>，<code>initComputed</code> 的定义在 <code>src/core/instance/state.js</code> 中：</p>","autoDesc":true}');export{e as data};
