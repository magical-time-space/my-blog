const n=JSON.parse(`{"key":"v-9478dc52","path":"/views/DevLog/Web/javascript/Snippet/Base64.html","title":"Base64","lang":"zh-CN","frontmatter":{"title":"Base64","icon":"page","order":1,"author":"admin","date":"2023-05-05T00:00:00.000Z","head":[["script",{"src":"/assets/js/Base64.js"}],["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/DevLog/Web/javascript/Snippet/Base64.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:title","content":"Base64"}],["meta",{"property":"og:description","content":"vue-playground 演示 使用 webtoolkit Base64 encode / decode /** * * Base64 encode / decode * http://www.webtoolkit.info * * webtoolkit.base64是一个第三方实现的 Base64 编码工具，完美的支持 unicode 编码的字符串 * Base64.encode('中文') --&gt; 5Lit5paH * Base64.decode('5Lit5paH') --&gt; 中文 * **/ export const Base64 = { // private property _keyStr: \\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\" // public method for encoding , encode: function (input) { var output = \\"\\"; var chr1, chr2, chr3, enc1, enc2, enc3, enc4; var i = 0; input = Base64._utf8_encode(input); while (i &lt; input.length) { chr1 = input.charCodeAt(i++); chr2 = input.charCodeAt(i++); chr3 = input.charCodeAt(i++); enc1 = chr1 &gt;&gt; 2; enc2 = ((chr1 &amp; 3) &lt;&lt; 4) | (chr2 &gt;&gt; 4); enc3 = ((chr2 &amp; 15) &lt;&lt; 2) | (chr3 &gt;&gt; 6); enc4 = chr3 &amp; 63; if (isNaN(chr2)) { enc3 = enc4 = 64; } else if (isNaN(chr3)) { enc4 = 64; } output = output + this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) + this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4); } // Whend return output; } // End Function encode // public method for decoding ,decode: function (input) { var output = \\"\\"; var chr1, chr2, chr3; var enc1, enc2, enc3, enc4; var i = 0; input = input.replace(/[^A-Za-z0-9\\\\+\\\\/\\\\=]/g, \\"\\"); while (i &lt; input.length) { enc1 = this._keyStr.indexOf(input.charAt(i++)); enc2 = this._keyStr.indexOf(input.charAt(i++)); enc3 = this._keyStr.indexOf(input.charAt(i++)); enc4 = this._keyStr.indexOf(input.charAt(i++)); chr1 = (enc1 &lt;&lt; 2) | (enc2 &gt;&gt; 4); chr2 = ((enc2 &amp; 15) &lt;&lt; 4) | (enc3 &gt;&gt; 2); chr3 = ((enc3 &amp; 3) &lt;&lt; 6) | enc4; output = output + String.fromCharCode(chr1); if (enc3 != 64) { output = output + String.fromCharCode(chr2); } if (enc4 != 64) { output = output + String.fromCharCode(chr3); } } // Whend output = Base64._utf8_decode(output); return output; } // End Function decode // private method for UTF-8 encoding ,_utf8_encode: function (string) { var utftext = \\"\\"; string = string.replace(/\\\\r\\\\n/g, \\"\\\\n\\"); for (var n = 0; n &lt; string.length; n++) { var c = string.charCodeAt(n); if (c &lt; 128) { utftext += String.fromCharCode(c); } else if ((c &gt; 127) &amp;&amp; (c &lt; 2048)) { utftext += String.fromCharCode((c &gt;&gt; 6) | 192); utftext += String.fromCharCode((c &amp; 63) | 128); } else { utftext += String.fromCharCode((c &gt;&gt; 12) | 224); utftext += String.fromCharCode(((c &gt;&gt; 6) &amp; 63) | 128); utftext += String.fromCharCode((c &amp; 63) | 128); } } // Next n return utftext; } // End Function _utf8_encode // private method for UTF-8 decoding ,_utf8_decode: function (utftext) { var string = \\"\\"; var i = 0; var c, c1, c2, c3; c = c1 = c2 = 0; while (i &lt; utftext.length) { c = utftext.charCodeAt(i); if (c &lt; 128) { string += String.fromCharCode(c); i++; } else if ((c &gt; 191) &amp;&amp; (c &lt; 224)) { c2 = utftext.charCodeAt(i + 1); string += String.fromCharCode(((c &amp; 31) &lt;&lt; 6) | (c2 &amp; 63)); i += 2; } else { c2 = utftext.charCodeAt(i + 1); c3 = utftext.charCodeAt(i + 2); string += String.fromCharCode(((c &amp; 15) &lt;&lt; 12) | ((c2 &amp; 63) &lt;&lt; 6) | (c3 &amp; 63)); i += 3; } } // Whend return string; } // End Function _utf8_decode }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"admin"}],["meta",{"property":"article:published_time","content":"2023-05-05T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Base64\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-05T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"admin\\"}]}"]],"description":"vue-playground 演示 使用 webtoolkit Base64 encode / decode /** * * Base64 encode / decode * http://www.webtoolkit.info * * webtoolkit.base64是一个第三方实现的 Base64 编码工具，完美的支持 unicode 编码的字符串 * Base64.encode('中文') --&gt; 5Lit5paH * Base64.decode('5Lit5paH') --&gt; 中文 * **/ export const Base64 = { // private property _keyStr: \\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\" // public method for encoding , encode: function (input) { var output = \\"\\"; var chr1, chr2, chr3, enc1, enc2, enc3, enc4; var i = 0; input = Base64._utf8_encode(input); while (i &lt; input.length) { chr1 = input.charCodeAt(i++); chr2 = input.charCodeAt(i++); chr3 = input.charCodeAt(i++); enc1 = chr1 &gt;&gt; 2; enc2 = ((chr1 &amp; 3) &lt;&lt; 4) | (chr2 &gt;&gt; 4); enc3 = ((chr2 &amp; 15) &lt;&lt; 2) | (chr3 &gt;&gt; 6); enc4 = chr3 &amp; 63; if (isNaN(chr2)) { enc3 = enc4 = 64; } else if (isNaN(chr3)) { enc4 = 64; } output = output + this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) + this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4); } // Whend return output; } // End Function encode // public method for decoding ,decode: function (input) { var output = \\"\\"; var chr1, chr2, chr3; var enc1, enc2, enc3, enc4; var i = 0; input = input.replace(/[^A-Za-z0-9\\\\+\\\\/\\\\=]/g, \\"\\"); while (i &lt; input.length) { enc1 = this._keyStr.indexOf(input.charAt(i++)); enc2 = this._keyStr.indexOf(input.charAt(i++)); enc3 = this._keyStr.indexOf(input.charAt(i++)); enc4 = this._keyStr.indexOf(input.charAt(i++)); chr1 = (enc1 &lt;&lt; 2) | (enc2 &gt;&gt; 4); chr2 = ((enc2 &amp; 15) &lt;&lt; 4) | (enc3 &gt;&gt; 2); chr3 = ((enc3 &amp; 3) &lt;&lt; 6) | enc4; output = output + String.fromCharCode(chr1); if (enc3 != 64) { output = output + String.fromCharCode(chr2); } if (enc4 != 64) { output = output + String.fromCharCode(chr3); } } // Whend output = Base64._utf8_decode(output); return output; } // End Function decode // private method for UTF-8 encoding ,_utf8_encode: function (string) { var utftext = \\"\\"; string = string.replace(/\\\\r\\\\n/g, \\"\\\\n\\"); for (var n = 0; n &lt; string.length; n++) { var c = string.charCodeAt(n); if (c &lt; 128) { utftext += String.fromCharCode(c); } else if ((c &gt; 127) &amp;&amp; (c &lt; 2048)) { utftext += String.fromCharCode((c &gt;&gt; 6) | 192); utftext += String.fromCharCode((c &amp; 63) | 128); } else { utftext += String.fromCharCode((c &gt;&gt; 12) | 224); utftext += String.fromCharCode(((c &gt;&gt; 6) &amp; 63) | 128); utftext += String.fromCharCode((c &amp; 63) | 128); } } // Next n return utftext; } // End Function _utf8_encode // private method for UTF-8 decoding ,_utf8_decode: function (utftext) { var string = \\"\\"; var i = 0; var c, c1, c2, c3; c = c1 = c2 = 0; while (i &lt; utftext.length) { c = utftext.charCodeAt(i); if (c &lt; 128) { string += String.fromCharCode(c); i++; } else if ((c &gt; 191) &amp;&amp; (c &lt; 224)) { c2 = utftext.charCodeAt(i + 1); string += String.fromCharCode(((c &amp; 31) &lt;&lt; 6) | (c2 &amp; 63)); i += 2; } else { c2 = utftext.charCodeAt(i + 1); c3 = utftext.charCodeAt(i + 2); string += String.fromCharCode(((c &amp; 15) &lt;&lt; 12) | ((c2 &amp; 63) &lt;&lt; 6) | (c3 &amp; 63)); i += 3; } } // Whend return string; } // End Function _utf8_decode }"},"headers":[],"git":{},"readingTime":{"minutes":4.11,"words":1233},"filePathRelative":"views/DevLog/Web/javascript/Snippet/Base64.md","localizedDate":"2023年5月5日","excerpt":"\\n<details class=\\"hint-container details\\"><summary>vue-playground 演示</summary>\\n\\n</details>\\n<details class=\\"hint-container details\\"><summary>使用 webtoolkit Base64 encode / decode</summary>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token doc-comment comment\\">/**\\n*\\n*  Base64 encode / decode\\n*  http://www.webtoolkit.info\\n*\\n*  webtoolkit.base64是一个第三方实现的 Base64 编码工具，完美的支持 unicode 编码的字符串\\n*  Base64.encode('中文') --&gt; 5Lit5paH\\n*  Base64.decode('5Lit5paH') --&gt; 中文\\n*\\n**/</span>\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">const</span> Base64 <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// private property</span>\\n    <span class=\\"token literal-property property\\">_keyStr</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\"</span>\\n    <span class=\\"token comment\\">// public method for encoding</span>\\n    <span class=\\"token punctuation\\">,</span> <span class=\\"token function-variable function\\">encode</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">input</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">var</span> output <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">var</span> chr1<span class=\\"token punctuation\\">,</span> chr2<span class=\\"token punctuation\\">,</span> chr3<span class=\\"token punctuation\\">,</span> enc1<span class=\\"token punctuation\\">,</span> enc2<span class=\\"token punctuation\\">,</span> enc3<span class=\\"token punctuation\\">,</span> enc4<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">var</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n        input <span class=\\"token operator\\">=</span> Base64<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">_utf8_encode</span><span class=\\"token punctuation\\">(</span>input<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">&lt;</span> input<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            chr1 <span class=\\"token operator\\">=</span> input<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charCodeAt</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            chr2 <span class=\\"token operator\\">=</span> input<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charCodeAt</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            chr3 <span class=\\"token operator\\">=</span> input<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charCodeAt</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            enc1 <span class=\\"token operator\\">=</span> chr1 <span class=\\"token operator\\">&gt;&gt;</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span>\\n            enc2 <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>chr1 <span class=\\"token operator\\">&amp;</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">|</span> <span class=\\"token punctuation\\">(</span>chr2 <span class=\\"token operator\\">&gt;&gt;</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            enc3 <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>chr2 <span class=\\"token operator\\">&amp;</span> <span class=\\"token number\\">15</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">|</span> <span class=\\"token punctuation\\">(</span>chr3 <span class=\\"token operator\\">&gt;&gt;</span> <span class=\\"token number\\">6</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            enc4 <span class=\\"token operator\\">=</span> chr3 <span class=\\"token operator\\">&amp;</span> <span class=\\"token number\\">63</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token function\\">isNaN</span><span class=\\"token punctuation\\">(</span>chr2<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                enc3 <span class=\\"token operator\\">=</span> enc4 <span class=\\"token operator\\">=</span> <span class=\\"token number\\">64</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token function\\">isNaN</span><span class=\\"token punctuation\\">(</span>chr3<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                enc4 <span class=\\"token operator\\">=</span> <span class=\\"token number\\">64</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n            output <span class=\\"token operator\\">=</span> output <span class=\\"token operator\\">+</span>\\n                <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_keyStr<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charAt</span><span class=\\"token punctuation\\">(</span>enc1<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_keyStr<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charAt</span><span class=\\"token punctuation\\">(</span>enc2<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span>\\n                <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_keyStr<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charAt</span><span class=\\"token punctuation\\">(</span>enc3<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_keyStr<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charAt</span><span class=\\"token punctuation\\">(</span>enc4<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token comment\\">// Whend </span>\\n        <span class=\\"token keyword\\">return</span> output<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token comment\\">// End Function encode </span>\\n    <span class=\\"token comment\\">// public method for decoding</span>\\n    <span class=\\"token punctuation\\">,</span><span class=\\"token function-variable function\\">decode</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">input</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">var</span> output <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">var</span> chr1<span class=\\"token punctuation\\">,</span> chr2<span class=\\"token punctuation\\">,</span> chr3<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">var</span> enc1<span class=\\"token punctuation\\">,</span> enc2<span class=\\"token punctuation\\">,</span> enc3<span class=\\"token punctuation\\">,</span> enc4<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">var</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n        input <span class=\\"token operator\\">=</span> input<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">replace</span><span class=\\"token punctuation\\">(</span><span class=\\"token regex\\"><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-source language-regex\\">[^A-Za-z0-9\\\\+\\\\/\\\\=]</span><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-flags\\">g</span></span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">&lt;</span> input<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            enc1 <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_keyStr<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">indexOf</span><span class=\\"token punctuation\\">(</span>input<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charAt</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            enc2 <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_keyStr<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">indexOf</span><span class=\\"token punctuation\\">(</span>input<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charAt</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            enc3 <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_keyStr<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">indexOf</span><span class=\\"token punctuation\\">(</span>input<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charAt</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            enc4 <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_keyStr<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">indexOf</span><span class=\\"token punctuation\\">(</span>input<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charAt</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            chr1 <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>enc1 <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">|</span> <span class=\\"token punctuation\\">(</span>enc2 <span class=\\"token operator\\">&gt;&gt;</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            chr2 <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>enc2 <span class=\\"token operator\\">&amp;</span> <span class=\\"token number\\">15</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">|</span> <span class=\\"token punctuation\\">(</span>enc3 <span class=\\"token operator\\">&gt;&gt;</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            chr3 <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>enc3 <span class=\\"token operator\\">&amp;</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token number\\">6</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">|</span> enc4<span class=\\"token punctuation\\">;</span>\\n            output <span class=\\"token operator\\">=</span> output <span class=\\"token operator\\">+</span> String<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fromCharCode</span><span class=\\"token punctuation\\">(</span>chr1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>enc3 <span class=\\"token operator\\">!=</span> <span class=\\"token number\\">64</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                output <span class=\\"token operator\\">=</span> output <span class=\\"token operator\\">+</span> String<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fromCharCode</span><span class=\\"token punctuation\\">(</span>chr2<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>enc4 <span class=\\"token operator\\">!=</span> <span class=\\"token number\\">64</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                output <span class=\\"token operator\\">=</span> output <span class=\\"token operator\\">+</span> String<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fromCharCode</span><span class=\\"token punctuation\\">(</span>chr3<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token comment\\">// Whend </span>\\n        output <span class=\\"token operator\\">=</span> Base64<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">_utf8_decode</span><span class=\\"token punctuation\\">(</span>output<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> output<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token comment\\">// End Function decode </span>\\n    <span class=\\"token comment\\">// private method for UTF-8 encoding</span>\\n    <span class=\\"token punctuation\\">,</span><span class=\\"token function-variable function\\">_utf8_encode</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">string</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">var</span> utftext <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">;</span>\\n        string <span class=\\"token operator\\">=</span> string<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">replace</span><span class=\\"token punctuation\\">(</span><span class=\\"token regex\\"><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-source language-regex\\">\\\\r\\\\n</span><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-flags\\">g</span></span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"\\\\n\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">var</span> n <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> n <span class=\\"token operator\\">&lt;</span> string<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span> n<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">var</span> c <span class=\\"token operator\\">=</span> string<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charCodeAt</span><span class=\\"token punctuation\\">(</span>n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>c <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">128</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                utftext <span class=\\"token operator\\">+=</span> String<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fromCharCode</span><span class=\\"token punctuation\\">(</span>c<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>c <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">127</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token punctuation\\">(</span>c <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">2048</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                utftext <span class=\\"token operator\\">+=</span> String<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fromCharCode</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>c <span class=\\"token operator\\">&gt;&gt;</span> <span class=\\"token number\\">6</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">|</span> <span class=\\"token number\\">192</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                utftext <span class=\\"token operator\\">+=</span> String<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fromCharCode</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>c <span class=\\"token operator\\">&amp;</span> <span class=\\"token number\\">63</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">|</span> <span class=\\"token number\\">128</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n                utftext <span class=\\"token operator\\">+=</span> String<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fromCharCode</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>c <span class=\\"token operator\\">&gt;&gt;</span> <span class=\\"token number\\">12</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">|</span> <span class=\\"token number\\">224</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                utftext <span class=\\"token operator\\">+=</span> String<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fromCharCode</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>c <span class=\\"token operator\\">&gt;&gt;</span> <span class=\\"token number\\">6</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&amp;</span> <span class=\\"token number\\">63</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">|</span> <span class=\\"token number\\">128</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                utftext <span class=\\"token operator\\">+=</span> String<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fromCharCode</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>c <span class=\\"token operator\\">&amp;</span> <span class=\\"token number\\">63</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">|</span> <span class=\\"token number\\">128</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token comment\\">// Next n </span>\\n        <span class=\\"token keyword\\">return</span> utftext<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token comment\\">// End Function _utf8_encode </span>\\n    <span class=\\"token comment\\">// private method for UTF-8 decoding</span>\\n    <span class=\\"token punctuation\\">,</span><span class=\\"token function-variable function\\">_utf8_decode</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">utftext</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">var</span> string <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">var</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">var</span> c<span class=\\"token punctuation\\">,</span> c1<span class=\\"token punctuation\\">,</span> c2<span class=\\"token punctuation\\">,</span> c3<span class=\\"token punctuation\\">;</span>\\n        c <span class=\\"token operator\\">=</span> c1 <span class=\\"token operator\\">=</span> c2 <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">&lt;</span> utftext<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            c <span class=\\"token operator\\">=</span> utftext<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charCodeAt</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>c <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">128</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                string <span class=\\"token operator\\">+=</span> String<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fromCharCode</span><span class=\\"token punctuation\\">(</span>c<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>c <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">191</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token punctuation\\">(</span>c <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">224</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                c2 <span class=\\"token operator\\">=</span> utftext<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charCodeAt</span><span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                string <span class=\\"token operator\\">+=</span> String<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fromCharCode</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>c <span class=\\"token operator\\">&amp;</span> <span class=\\"token number\\">31</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token number\\">6</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">|</span> <span class=\\"token punctuation\\">(</span>c2 <span class=\\"token operator\\">&amp;</span> <span class=\\"token number\\">63</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                i <span class=\\"token operator\\">+=</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n                c2 <span class=\\"token operator\\">=</span> utftext<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charCodeAt</span><span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                c3 <span class=\\"token operator\\">=</span> utftext<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charCodeAt</span><span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">+</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                string <span class=\\"token operator\\">+=</span> String<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fromCharCode</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>c <span class=\\"token operator\\">&amp;</span> <span class=\\"token number\\">15</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token number\\">12</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">|</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>c2 <span class=\\"token operator\\">&amp;</span> <span class=\\"token number\\">63</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token number\\">6</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">|</span> <span class=\\"token punctuation\\">(</span>c3 <span class=\\"token operator\\">&amp;</span> <span class=\\"token number\\">63</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                i <span class=\\"token operator\\">+=</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token comment\\">// Whend </span>\\n        <span class=\\"token keyword\\">return</span> string<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token comment\\">// End Function _utf8_decode </span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></details>","autoDesc":true}`);export{n as data};
