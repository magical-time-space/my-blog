const n=JSON.parse(`{"key":"v-06d00f62","path":"/views/DevLog/Web/javascript/Snippet/format.html","title":"format","lang":"zh-CN","frontmatter":{"title":"format","icon":"page","order":1,"author":"admin","date":"2023-05-05T00:00:00.000Z","description":"格式化文本 // 此代码返回字符串的字节长度 const byteSize = str =&gt; new Blob([str]).size; // 此段代码从Date对象里获取当前时间 const getColonTimeFromDate = date =&gt; date.toTimeString().slice(0, 8); // getColonTimeFromDate(new Date()); // \\"08:38:00\\" // 此段代码的主要功能就是返回数据的类型 const getType = v =&gt; v === undefined ? 'undefined' : v === null ? 'null' : v.constructor.name.toLowerCase(); // getType(new Set([1, 2, 3])); // 'set' const isType = (type,name) =&gt; {return type &amp;&amp; name &amp;&amp; type.constructor.name == name}; // 此段代码返回DOM元素是否包含指定的Class样式 const hasClass = (el, className) =&gt; el.classList.contains(className); // 获取字符串里的数字 const getNumber = function (str) { return \`\${str}\`.replace(/[^\\\\d]/gi, '');} // 检查属性归属 const has = function (obj, name) { return obj &amp;&amp; name &amp;&amp; obj.hasOwnProperty(name);} // 检查空集 const isNull = function (obj, name) { return !obj[name];} // 随机整数 function getRandomInt(min, max) { min = Math.ceil(min); max = Math.floor(max); return Math.floor(Math.random() * (max - min) + min); } // 打印容量大小带单位 function toStringUint(size, limit = 2) { let kb = 1024, unit = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']; let i = Math.floor(Math.log(size) / Math.log(kb)); if (!size || i == -Infinity) { return 0; } return (size / Math.pow(kb, i)).toFixed(limit) + ' ' + unit[i]; } // 格式化时间 function formatTime(time, format) { time = typeof (time) === \\"number\\" ? time : (time instanceof Date ? time.getTime() : parseInt(time)); if (isNaN(time)) return null; if (typeof (format) !== 'string' || !format) format = 'yyyy-MM-dd hh:mm:ss'; let _time = new Date(time); time = _time.toString().split(/[\\\\s\\\\:]/g).slice(0, -2); time[1] = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'][_time.getMonth()]; let _mapping = { MM: 1,dd: 2,yyyy: 3,hh: 4,mm: 5,ss: 6 }; return format.replace(/([Mmdhs]|y{2})\\\\1/g, (key) =&gt; time[_mapping[key]]); } // 秒 转 时分 function formatSecToHourMin(time) { if (!time) { return ''; } const h = parseInt(time / 3600) const minute = parseInt(time / 60 % 60) const second = Math.ceil(time % 60) const hours = h &lt; 10 ? '0' + h : h const formatSecond = second &gt; 59 ? 59 : second return \`\${hours &gt; 0 ? \`\${hours}:\` : ''}\${minute &lt; 10 ? '0' + minute : minute}:\${formatSecond &lt; 10 ? '0' + formatSecond : formatSecond}\` } // html转义 function escape2Html(str) { if (!str) { return '' } var arrEntities = { 'lt': '&lt;','gt': '&gt;','nbsp': ' ','amp': '&amp;','quot': '\\"','#40': '(','#41': ')','#39': \\"'\\",'apos': '-' }; return str.replace(/&amp;(lt|gt|nbsp|amp|quot|#40|#41|#39|apos);/ig, function (all, t) { return arrEntities[t]; }); }","head":[["meta",{"property":"og:url","content":"https://mpbug.gitee.io/views/DevLog/Web/javascript/Snippet/format.html"}],["meta",{"property":"og:site_name","content":"魔法Bug"}],["meta",{"property":"og:title","content":"format"}],["meta",{"property":"og:description","content":"格式化文本 // 此代码返回字符串的字节长度 const byteSize = str =&gt; new Blob([str]).size; // 此段代码从Date对象里获取当前时间 const getColonTimeFromDate = date =&gt; date.toTimeString().slice(0, 8); // getColonTimeFromDate(new Date()); // \\"08:38:00\\" // 此段代码的主要功能就是返回数据的类型 const getType = v =&gt; v === undefined ? 'undefined' : v === null ? 'null' : v.constructor.name.toLowerCase(); // getType(new Set([1, 2, 3])); // 'set' const isType = (type,name) =&gt; {return type &amp;&amp; name &amp;&amp; type.constructor.name == name}; // 此段代码返回DOM元素是否包含指定的Class样式 const hasClass = (el, className) =&gt; el.classList.contains(className); // 获取字符串里的数字 const getNumber = function (str) { return \`\${str}\`.replace(/[^\\\\d]/gi, '');} // 检查属性归属 const has = function (obj, name) { return obj &amp;&amp; name &amp;&amp; obj.hasOwnProperty(name);} // 检查空集 const isNull = function (obj, name) { return !obj[name];} // 随机整数 function getRandomInt(min, max) { min = Math.ceil(min); max = Math.floor(max); return Math.floor(Math.random() * (max - min) + min); } // 打印容量大小带单位 function toStringUint(size, limit = 2) { let kb = 1024, unit = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']; let i = Math.floor(Math.log(size) / Math.log(kb)); if (!size || i == -Infinity) { return 0; } return (size / Math.pow(kb, i)).toFixed(limit) + ' ' + unit[i]; } // 格式化时间 function formatTime(time, format) { time = typeof (time) === \\"number\\" ? time : (time instanceof Date ? time.getTime() : parseInt(time)); if (isNaN(time)) return null; if (typeof (format) !== 'string' || !format) format = 'yyyy-MM-dd hh:mm:ss'; let _time = new Date(time); time = _time.toString().split(/[\\\\s\\\\:]/g).slice(0, -2); time[1] = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'][_time.getMonth()]; let _mapping = { MM: 1,dd: 2,yyyy: 3,hh: 4,mm: 5,ss: 6 }; return format.replace(/([Mmdhs]|y{2})\\\\1/g, (key) =&gt; time[_mapping[key]]); } // 秒 转 时分 function formatSecToHourMin(time) { if (!time) { return ''; } const h = parseInt(time / 3600) const minute = parseInt(time / 60 % 60) const second = Math.ceil(time % 60) const hours = h &lt; 10 ? '0' + h : h const formatSecond = second &gt; 59 ? 59 : second return \`\${hours &gt; 0 ? \`\${hours}:\` : ''}\${minute &lt; 10 ? '0' + minute : minute}:\${formatSecond &lt; 10 ? '0' + formatSecond : formatSecond}\` } // html转义 function escape2Html(str) { if (!str) { return '' } var arrEntities = { 'lt': '&lt;','gt': '&gt;','nbsp': ' ','amp': '&amp;','quot': '\\"','#40': '(','#41': ')','#39': \\"'\\",'apos': '-' }; return str.replace(/&amp;(lt|gt|nbsp|amp|quot|#40|#41|#39|apos);/ig, function (all, t) { return arrEntities[t]; }); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"admin"}],["meta",{"property":"article:published_time","content":"2023-05-05T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"format\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-05T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"admin\\"}]}"]]},"headers":[{"level":3,"title":"格式化文本","slug":"格式化文本","link":"#格式化文本","children":[]}],"git":{},"readingTime":{"minutes":1.93,"words":578},"filePathRelative":"views/DevLog/Web/javascript/Snippet/format.md","localizedDate":"2023年5月5日","excerpt":"<h3> 格式化文本</h3>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 此代码返回字符串的字节长度</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">byteSize</span> <span class=\\"token operator\\">=</span> <span class=\\"token parameter\\">str</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Blob</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span>str<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>size<span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// 此段代码从Date对象里获取当前时间</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">getColonTimeFromDate</span> <span class=\\"token operator\\">=</span> <span class=\\"token parameter\\">date</span> <span class=\\"token operator\\">=&gt;</span> date<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toTimeString</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">slice</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">8</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// getColonTimeFromDate(new Date()); // \\"08:38:00\\"</span>\\n\\n<span class=\\"token comment\\">// 此段代码的主要功能就是返回数据的类型</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">getType</span> <span class=\\"token operator\\">=</span> <span class=\\"token parameter\\">v</span> <span class=\\"token operator\\">=&gt;</span>\\n    v <span class=\\"token operator\\">===</span> <span class=\\"token keyword\\">undefined</span> <span class=\\"token operator\\">?</span> <span class=\\"token string\\">'undefined'</span> <span class=\\"token operator\\">:</span> v <span class=\\"token operator\\">===</span> <span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">?</span> <span class=\\"token string\\">'null'</span> <span class=\\"token operator\\">:</span> v<span class=\\"token punctuation\\">.</span>constructor<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toLowerCase</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// getType(new Set([1, 2, 3])); // 'set'</span>\\n\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">isType</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">type<span class=\\"token punctuation\\">,</span>name</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span><span class=\\"token keyword\\">return</span> type <span class=\\"token operator\\">&amp;&amp;</span> name <span class=\\"token operator\\">&amp;&amp;</span> type<span class=\\"token punctuation\\">.</span>constructor<span class=\\"token punctuation\\">.</span>name <span class=\\"token operator\\">==</span> name<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// 此段代码返回DOM元素是否包含指定的Class样式</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">hasClass</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">el<span class=\\"token punctuation\\">,</span> className</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> el<span class=\\"token punctuation\\">.</span>classList<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">contains</span><span class=\\"token punctuation\\">(</span>className<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 获取字符串里的数字</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">getNumber</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">str</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">return</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>str<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token template-punctuation string\\">\`</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">replace</span><span class=\\"token punctuation\\">(</span><span class=\\"token regex\\"><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-source language-regex\\">[^\\\\d]</span><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-flags\\">gi</span></span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">''</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token punctuation\\">}</span>\\n<span class=\\"token comment\\">// 检查属性归属</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">has</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">obj<span class=\\"token punctuation\\">,</span> name</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">return</span> obj <span class=\\"token operator\\">&amp;&amp;</span> name <span class=\\"token operator\\">&amp;&amp;</span> obj<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">hasOwnProperty</span><span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token punctuation\\">}</span>\\n<span class=\\"token comment\\">// 检查空集</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">isNull</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">obj<span class=\\"token punctuation\\">,</span> name</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">return</span> <span class=\\"token operator\\">!</span>obj<span class=\\"token punctuation\\">[</span>name<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span><span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 随机整数</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">getRandomInt</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">min<span class=\\"token punctuation\\">,</span> max</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    min <span class=\\"token operator\\">=</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ceil</span><span class=\\"token punctuation\\">(</span>min<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    max <span class=\\"token operator\\">=</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">floor</span><span class=\\"token punctuation\\">(</span>max<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">floor</span><span class=\\"token punctuation\\">(</span>Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">random</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> <span class=\\"token punctuation\\">(</span>max <span class=\\"token operator\\">-</span> min<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> min<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> \\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 打印容量大小带单位</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">toStringUint</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">size<span class=\\"token punctuation\\">,</span> limit <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span></span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">let</span> kb <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1024</span><span class=\\"token punctuation\\">,</span> unit <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'B'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'KB'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'MB'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'GB'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'TB'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'PB'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'EB'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'ZB'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'YB'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">floor</span><span class=\\"token punctuation\\">(</span>Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>size<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>kb<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>size <span class=\\"token operator\\">||</span> i <span class=\\"token operator\\">==</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">Infinity</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">(</span>size <span class=\\"token operator\\">/</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">pow</span><span class=\\"token punctuation\\">(</span>kb<span class=\\"token punctuation\\">,</span> i<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toFixed</span><span class=\\"token punctuation\\">(</span>limit<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token string\\">' '</span> <span class=\\"token operator\\">+</span> unit<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 格式化时间</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">formatTime</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">time<span class=\\"token punctuation\\">,</span> format</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    time <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">typeof</span> <span class=\\"token punctuation\\">(</span>time<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">===</span> <span class=\\"token string\\">\\"number\\"</span> <span class=\\"token operator\\">?</span> time <span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span>time <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">Date</span> <span class=\\"token operator\\">?</span> time<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getTime</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">:</span> <span class=\\"token function\\">parseInt</span><span class=\\"token punctuation\\">(</span>time<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token function\\">isNaN</span><span class=\\"token punctuation\\">(</span>time<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">typeof</span> <span class=\\"token punctuation\\">(</span>format<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">!==</span> <span class=\\"token string\\">'string'</span> <span class=\\"token operator\\">||</span> <span class=\\"token operator\\">!</span>format<span class=\\"token punctuation\\">)</span> format <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'yyyy-MM-dd hh:mm:ss'</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">let</span> _time <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Date</span><span class=\\"token punctuation\\">(</span>time<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    time <span class=\\"token operator\\">=</span> _time<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toString</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">split</span><span class=\\"token punctuation\\">(</span><span class=\\"token regex\\"><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-source language-regex\\">[\\\\s\\\\:]</span><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-flags\\">g</span></span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">slice</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    time<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'01'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'02'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'03'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'04'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'05'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'06'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'07'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'08'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'09'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'10'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'11'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'12'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>_time<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getMonth</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">let</span> _mapping <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token constant\\">MM</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span><span class=\\"token literal-property property\\">dd</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token literal-property property\\">yyyy</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span><span class=\\"token literal-property property\\">hh</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">,</span><span class=\\"token literal-property property\\">mm</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span><span class=\\"token literal-property property\\">ss</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">6</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> format<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">replace</span><span class=\\"token punctuation\\">(</span><span class=\\"token regex\\"><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-source language-regex\\">([Mmdhs]|y{2})\\\\1</span><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-flags\\">g</span></span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">key</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> time<span class=\\"token punctuation\\">[</span>_mapping<span class=\\"token punctuation\\">[</span>key<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 秒 转 时分</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">formatSecToHourMin</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">time</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>time<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">return</span> <span class=\\"token string\\">''</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">const</span> h <span class=\\"token operator\\">=</span> <span class=\\"token function\\">parseInt</span><span class=\\"token punctuation\\">(</span>time <span class=\\"token operator\\">/</span> <span class=\\"token number\\">3600</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">const</span> minute <span class=\\"token operator\\">=</span> <span class=\\"token function\\">parseInt</span><span class=\\"token punctuation\\">(</span>time <span class=\\"token operator\\">/</span> <span class=\\"token number\\">60</span> <span class=\\"token operator\\">%</span> <span class=\\"token number\\">60</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">const</span> second <span class=\\"token operator\\">=</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ceil</span><span class=\\"token punctuation\\">(</span>time <span class=\\"token operator\\">%</span> <span class=\\"token number\\">60</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">const</span> hours <span class=\\"token operator\\">=</span> h <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">10</span> <span class=\\"token operator\\">?</span> <span class=\\"token string\\">'0'</span> <span class=\\"token operator\\">+</span> h <span class=\\"token operator\\">:</span> h\\n    <span class=\\"token keyword\\">const</span> formatSecond <span class=\\"token operator\\">=</span> second <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">59</span> <span class=\\"token operator\\">?</span> <span class=\\"token number\\">59</span> <span class=\\"token operator\\">:</span> second\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>hours <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">?</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>hours<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">:</span><span class=\\"token template-punctuation string\\">\`</span></span> <span class=\\"token operator\\">:</span> <span class=\\"token string\\">''</span><span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>minute <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">10</span> <span class=\\"token operator\\">?</span> <span class=\\"token string\\">'0'</span> <span class=\\"token operator\\">+</span> minute <span class=\\"token operator\\">:</span> minute<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">:</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>formatSecond <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">10</span> <span class=\\"token operator\\">?</span> <span class=\\"token string\\">'0'</span> <span class=\\"token operator\\">+</span> formatSecond <span class=\\"token operator\\">:</span> formatSecond<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token template-punctuation string\\">\`</span></span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// html转义</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">escape2Html</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">str</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>str<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">return</span> <span class=\\"token string\\">''</span> <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">var</span> arrEntities <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token string-property property\\">'lt'</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'&lt;'</span><span class=\\"token punctuation\\">,</span><span class=\\"token string-property property\\">'gt'</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'&gt;'</span><span class=\\"token punctuation\\">,</span><span class=\\"token string-property property\\">'nbsp'</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">' '</span><span class=\\"token punctuation\\">,</span><span class=\\"token string-property property\\">'amp'</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'&amp;'</span><span class=\\"token punctuation\\">,</span><span class=\\"token string-property property\\">'quot'</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'\\"'</span><span class=\\"token punctuation\\">,</span><span class=\\"token string-property property\\">'#40'</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'('</span><span class=\\"token punctuation\\">,</span><span class=\\"token string-property property\\">'#41'</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">')'</span><span class=\\"token punctuation\\">,</span><span class=\\"token string-property property\\">'#39'</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"'\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token string-property property\\">'apos'</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'-'</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> str<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">replace</span><span class=\\"token punctuation\\">(</span><span class=\\"token regex\\"><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-source language-regex\\">&amp;(lt|gt|nbsp|amp|quot|#40|#41|#39|apos);</span><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-flags\\">ig</span></span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">all<span class=\\"token punctuation\\">,</span> t</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> arrEntities<span class=\\"token punctuation\\">[</span>t<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
